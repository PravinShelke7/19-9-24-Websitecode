Imports Microsoft.VisualBasic
Imports System.Web.SessionState
Imports System.Data
Imports System.Data.OleDb
Imports System

Namespace SelectQuery

    Public Class Selectdata

        Public Function GetUsernamePassword(ByVal Id As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = "Select Uname,Upwd From Ulogin Where ID= " & Id
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetInuseCount(ByVal UserName As String) As DataTable
            Dim Dts As New DataTable
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = "Select * from inuse where Username='" + UserName + "'"
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function Cases(ByVal ID As String) As String
            Dim CaseIDs As String = ""
            Try

                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("Econ3ConnectionString")
                Dim StrSqlCases As String = ""
                StrSqlCases = "select to_char( nvl(Assumptions.Case1,0) )  ||  ',' || to_char( nvl(Assumptions.Case2,0))    ||   ',' ||  to_char( nvl(Assumptions.Case3,0) )  ||   ',' || to_char( nvl(Assumptions.Case4,0) )  ||  ',' ||  to_char( nvl(Assumptions.Case5,0) )  ||  ',' ||  to_char ( nvl(Assumptions.Case6,0) ) ||   ',' || to_char( nvl(Assumptions.Case7,0)  )  ||   ','  ||  to_char( nvl(Assumptions.Case8,0)  )  ||  ',' || to_char( nvl(Assumptions.Case9,0) )   ||   ','  || to_Char( nvl(Assumptions.Case10,0) )  as Cases   from  Assumptions WHERE Assumptions.AssumptionId =" + ID + ""
                Dim Cs As New DataTable()
                Cs = odbUtil.FillDataTable(StrSqlCases, MyConnectionString)
                CaseIDs = Cs.Rows(0).Item("Cases").ToString()
                Return CaseIDs
            Catch ex As Exception
                Return CaseIDs
            End Try



        End Function

        Public Function GetSavedCaseAsperUser(ByVal UserName As String) As DataSet
            Dim Dts As New DataSet
            Try
                Dim StrSqlSaved As String = ""
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString1 As String = ""
                MyConnectionString1 = System.Configuration.ConfigurationManager.AppSettings("Econ3ConnectionString")
                StrSqlSaved = "SELECT distinct Assumptions.AssumptionId,"
                StrSqlSaved = StrSqlSaved + "( Assumptions.AssumptionId ||' - ' ||"
                StrSqlSaved = StrSqlSaved + "Assumptions.DESCRIPTION || ' : ' ||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case1 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case2 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case3 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case4 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case5 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case6 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case7 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case8 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case9 || ' '||"
                StrSqlSaved = StrSqlSaved + "Assumptions.Case10 "
                StrSqlSaved = StrSqlSaved + ")As Des  FROM Assumptions  Assumptions "
                StrSqlSaved = StrSqlSaved + " inner join PERMASSUMPTIONS"
                StrSqlSaved = StrSqlSaved + " on Assumptions.AssumptionId  = PERMASSUMPTIONS.AssumptionId "
                StrSqlSaved = StrSqlSaved + " and Assumptions.saved = 1 and Assumptions.MODULE=1"
                StrSqlSaved = StrSqlSaved + " and PERMASSUMPTIONS.username='" + UserName + "'"
                Dts = odbUtil.FillDataSet(StrSqlSaved, MyConnectionString1)
            Catch ex As Exception
                Throw
            End Try
            Return Dts
        End Function

        Public Function GetDescription(ByVal AssumptionID As String) As String
            Dim Des As String = ""
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("Econ3ConnectionString")
                Dim StrSql As String = "Select DESCRIPTION from ASSUMPTIONS where ASSUMPTIONID = " + AssumptionID.ToString() + " "
                Dim Dts As New DataTable()
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Des = Dts.Rows(0).Item("DESCRIPTION")
                Return Des
            Catch ex As Exception
                Throw
                Return Des
            End Try
        End Function

        Public Function GetProductFormatSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim dts As New DataTable()
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")

                Dim StrSqlCombine = " select distinct"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.CaseId,"
                StrSqlCombine = StrSqlCombine + " (BaseCases.CaseDe1 ||''||BaseCases.CaseDe2 )as CaseDes, "
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m1,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m2,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m3,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m4,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m5,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m6,"
                StrSqlCombine = StrSqlCombine + " Preferences.Units,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m1,ProductFormat2.m1 ) as Format_M1,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m2,ProductFormat2.m2 ) as Format_M2,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m3,ProductFormat2.m3 ) as Format_M3,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m4,ProductFormat2.m4 ) as Format_M4,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m5,ProductFormat2.m5 ) as Format_M5,"
                StrSqlCombine = StrSqlCombine + " Total.prodwt,	Total.rolldia,Preferences.CONVWT,Preferences.convthick,Preferences.Title8 "
                StrSqlCombine = StrSqlCombine + " from ProductFormatIn "
                StrSqlCombine = StrSqlCombine + " inner join Preferences "
                StrSqlCombine = StrSqlCombine + " on Preferences.CaseId = ProductFormatIn.CaseID"
                StrSqlCombine = StrSqlCombine + " inner join Total "
                StrSqlCombine = StrSqlCombine + " on Total.CaseID = Preferences.CaseID "
                StrSqlCombine = StrSqlCombine + " left outer join ProductFormat"
                StrSqlCombine = StrSqlCombine + " on ProductFormat.FormatId = ProductFormatIn.M1"
                StrSqlCombine = StrSqlCombine + " and Preferences.Units = 0"
                StrSqlCombine = StrSqlCombine + " left outer join ProductFormat2"
                StrSqlCombine = StrSqlCombine + " on ProductFormat2.FormatId = ProductFormatIn.M1"
                StrSqlCombine = StrSqlCombine + " and Preferences.Units = 1"
                StrSqlCombine = StrSqlCombine + " inner join BaseCases"
                StrSqlCombine = StrSqlCombine + " on BaseCases.CaseId = ProductFormatIn.CaseId"
                StrSqlCombine = StrSqlCombine + "  where ProductFormatIn.CaseId in(" + Cases + ")"
                StrSqlCombine = StrSqlCombine + " Union"
                StrSqlCombine = StrSqlCombine + " select distinct"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.CaseId,"
                StrSqlCombine = StrSqlCombine + " (PermissionsCases.CaseDe1 ||''||PermissionsCases.CaseDe2 )as CaseDes, "
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m1,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m2,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m3,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m4,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m5,"
                StrSqlCombine = StrSqlCombine + " ProductFormatIn.m6,"
                StrSqlCombine = StrSqlCombine + " Preferences.Units,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m1,ProductFormat2.m1 ) as Format_M1,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m2,ProductFormat2.m2 ) as Format_M2,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m3,ProductFormat2.m3 ) as Format_M3,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m4,ProductFormat2.m4 ) as Format_M4,"
                StrSqlCombine = StrSqlCombine + " nvl(ProductFormat.m5,ProductFormat2.m5 ) as Format_M5,"
                StrSqlCombine = StrSqlCombine + " Total.prodwt,	Total.rolldia,Preferences.CONVWT, Preferences.convthick,Preferences.Title8 "
                StrSqlCombine = StrSqlCombine + " from ProductFormatIn "
                StrSqlCombine = StrSqlCombine + " inner join Preferences "
                StrSqlCombine = StrSqlCombine + " on Preferences.CaseId = ProductFormatIn.CaseID"
                StrSqlCombine = StrSqlCombine + " inner join Total "
                StrSqlCombine = StrSqlCombine + " on Total.CaseID = Preferences.CaseID "
                StrSqlCombine = StrSqlCombine + " left outer join ProductFormat"
                StrSqlCombine = StrSqlCombine + " on ProductFormat.FormatId = ProductFormatIn.M1"
                StrSqlCombine = StrSqlCombine + " and Preferences.Units = 0"
                StrSqlCombine = StrSqlCombine + " left outer join ProductFormat2"
                StrSqlCombine = StrSqlCombine + " on ProductFormat2.FormatId = ProductFormatIn.M1"
                StrSqlCombine = StrSqlCombine + " and Preferences.Units = 1"
                StrSqlCombine = StrSqlCombine + " inner join PermissionsCases"
                StrSqlCombine = StrSqlCombine + " on PermissionsCases.CaseId = ProductFormatIn.CaseId"
                StrSqlCombine = StrSqlCombine + " and PermissionsCases.UserName = '" + UserName + "' "

                StrSqlCombine = StrSqlCombine + " where ProductFormatIn.CaseId in(" + Cases + ")"


                dts = odbUtil.FillDataTable(StrSqlCombine, MyConnectionString)
                Return dts
            Catch ex As Exception
                Throw
                Return dts
            End Try


        End Function

        Public Function GetProdCombo(ByVal Unit As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim Sql1 As String = " select formatID, formatDE1, formatDE2,(formatID||' . '||formatDE1||''||formatDE2) as Des from ProductFormat"
                Dim Sql2 As String = " select formatID, formatDE1, formatDE2,(formatID||' . '||formatDE1||''||formatDE2) as Des from ProductFormat2"

                If Unit = 0 Then
                    Dts = odbUtil.FillDataTable(Sql1, MyConnectionString)
                Else
                    Dts = odbUtil.FillDataTable(Sql2, MyConnectionString)
                End If

                Return Dts
            Catch ex As Exception
                Return Dts
            End Try



        End Function

        Public Function GetPalletTruckSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")

                Dim StrSqlCombine As String = "SELECT DISTINCT"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.CASEID,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M1 AS PALLETWIDTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M2	AS PALLETLENGTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M3 AS PALLETHEIGHT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M4 AS CARTONSNUMBER,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M5 AS PRODUCTNUMBER,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T1 AS TRUCKWIDTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T2 AS TRUCKLENGTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T3 AS TRUCKHEIGHT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T4 AS TRUCKWEIGHTLIMIT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T5 AS TRUCKNUMBER,"
                StrSqlCombine = StrSqlCombine + " TOTAL.TOTWTPERT AS CALCULATEDWEIGHT,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CURR AS CURRENCYCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CONVTHICK AS THICKNESSCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CONVWT AS WIGHTCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.UNITS,"
                StrSqlCombine = StrSqlCombine + " (BASECASES.CASEDE1||' '||BASECASES.CASEDE2)AS CASEDE	"
                StrSqlCombine = StrSqlCombine + " FROM TRUCKPALLETIN"
                StrSqlCombine = StrSqlCombine + " INNER JOIN PREFERENCES"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CASEID = TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " INNER JOIN TOTAL"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " TOTAL.CASEID = TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " INNER JOIN BASECASES"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " BASECASES.CASEID =TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " WHERE TRUCKPALLETIN.CASEID IN (" + Cases + ")"
                StrSqlCombine = StrSqlCombine + "UNION"
                StrSqlCombine = StrSqlCombine + " SELECT DISTINCT"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.CASEID,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M1 AS PALLETWIDTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M2	AS PALLETLENGTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M3 AS PALLETHEIGHT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M4 AS CARTONSNUMBER,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.M5 AS PRODUCTNUMBER,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T1 AS TRUCKWIDTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T2 AS TRUCKLENGTH,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T3 AS TRUCKHEIGHT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T4 AS TRUCKWEIGHTLIMIT,"
                StrSqlCombine = StrSqlCombine + " TRUCKPALLETIN.T5 AS TRUCKNUMBER,"
                StrSqlCombine = StrSqlCombine + " TOTAL.TOTWTPERT AS CALCULATEDWEIGHT,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CURR AS CURRENCYCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CONVTHICK AS THICKNESSCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CONVWT AS WIGHTCONVERSION,"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.UNITS,"
                StrSqlCombine = StrSqlCombine + " (PERMISSIONSCASES.CASEDE1||' '||PERMISSIONSCASES.CASEDE2)AS CASEDES	"
                StrSqlCombine = StrSqlCombine + " FROM TRUCKPALLETIN"
                StrSqlCombine = StrSqlCombine + " INNER JOIN PREFERENCES"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " PREFERENCES.CASEID = TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " INNER JOIN TOTAL"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " TOTAL.CASEID = TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " INNER JOIN PERMISSIONSCASES"
                StrSqlCombine = StrSqlCombine + " ON"
                StrSqlCombine = StrSqlCombine + " PERMISSIONSCASES.CASEID =TRUCKPALLETIN.CASEID"
                StrSqlCombine = StrSqlCombine + " WHERE  USERNAME='" + UserName + "'"
                StrSqlCombine = StrSqlCombine + " AND TRUCKPALLETIN.CASEID IN (" + Cases + ")"

                Dts = odbUtil.FillDataTable(StrSqlCombine, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPalletINSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")

                Dim StrSql As String = ""
                StrSql = "SELECT  DISTINCT  "
                StrSql = StrSql + "PALLETIN.CASEID, "
                StrSql = StrSql + "( CASE WHEN PALLETIN.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = PALLETIN.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( PERMISSIONSCASES.CASEDE1|| ' ' ||PERMISSIONSCASES.CASEDE2) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = PALLETIN.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "ITEM1.PALLETID AS ITEM1, "
                StrSql = StrSql + "ITEM2.PALLETID AS ITEM2, "
                StrSql = StrSql + "ITEM3.PALLETID AS ITEM3, "
                StrSql = StrSql + "ITEM4.PALLETID AS ITEM4, "
                StrSql = StrSql + "ITEM5.PALLETID AS ITEM5, "
                StrSql = StrSql + "ITEM6.PALLETID AS ITEM6, "
                StrSql = StrSql + "ITEM7.PALLETID AS ITEM7, "
                StrSql = StrSql + "ITEM8.PALLETID AS ITEM8, "
                StrSql = StrSql + "ITEM9.PALLETID AS ITEM9, "
                StrSql = StrSql + "ITEM10.PALLETID AS ITEM10, "
                StrSql = StrSql + "PALLETIN.T1 AS NUMBER1, "
                StrSql = StrSql + "PALLETIN.T2 AS NUMBER2, "
                StrSql = StrSql + "PALLETIN.T3 AS NUMBER3, "
                StrSql = StrSql + "PALLETIN.T4 AS NUMBER4, "
                StrSql = StrSql + "PALLETIN.T5 AS NUMBER5, "
                StrSql = StrSql + "PALLETIN.T6 AS NUMBER6, "
                StrSql = StrSql + "PALLETIN.T7 AS NUMBER7, "
                StrSql = StrSql + "PALLETIN.T8 AS NUMBER8, "
                StrSql = StrSql + "PALLETIN.T9 AS NUMBER9, "
                StrSql = StrSql + "PALLETIN.T10 AS NUMBER10, "
                StrSql = StrSql + "PALLETIN.R1 AS RECYCLE1, "
                StrSql = StrSql + "PALLETIN.R2 AS RECYCLE2, "
                StrSql = StrSql + "PALLETIN.R3 AS RECYCLE3, "
                StrSql = StrSql + "PALLETIN.R4 AS RECYCLE4, "
                StrSql = StrSql + "PALLETIN.R5 AS RECYCLE5, "
                StrSql = StrSql + "PALLETIN.R6 AS RECYCLE6, "
                StrSql = StrSql + "PALLETIN.R7 AS RECYCLE7, "
                StrSql = StrSql + "PALLETIN.R8 AS RECYCLE8, "
                StrSql = StrSql + "PALLETIN.R9 AS RECYCLE9, "
                StrSql = StrSql + "PALLETIN.R10 AS RECYCLE10, "
                StrSql = StrSql + "ROUND((ITEM1.WEIGHT * PREFERENCES.CONVWT),2) AS Weight1, "
                StrSql = StrSql + "ROUND((ITEM2.WEIGHT * PREFERENCES.CONVWT),2) AS Weight2, "
                StrSql = StrSql + "ROUND((ITEM3.WEIGHT * PREFERENCES.CONVWT),2) AS Weight3, "
                StrSql = StrSql + "ROUND((ITEM4.WEIGHT * PREFERENCES.CONVWT),2) AS Weight4, "
                StrSql = StrSql + "ROUND((ITEM5.WEIGHT * PREFERENCES.CONVWT),2) AS Weight5, "
                StrSql = StrSql + "ROUND((ITEM6.WEIGHT * PREFERENCES.CONVWT),2) AS Weight6, "
                StrSql = StrSql + "ROUND((ITEM7.WEIGHT * PREFERENCES.CONVWT),2) AS Weight7, "
                StrSql = StrSql + "ROUND((ITEM8.WEIGHT * PREFERENCES.CONVWT),2) AS Weight8, "
                StrSql = StrSql + "ROUND((ITEM9.WEIGHT * PREFERENCES.CONVWT),2) AS Weight9, "
                StrSql = StrSql + "ROUND((ITEM10.WEIGHT * PREFERENCES.CONVWT),2) AS Weight10, "
                StrSql = StrSql + "ROUND((ITEM1.PRICE * PREFERENCES.CURR),2) AS PRICE1, "
                StrSql = StrSql + "ROUND((ITEM2.PRICE * PREFERENCES.CURR),2) AS PRICE2, "
                StrSql = StrSql + "ROUND((ITEM3.PRICE * PREFERENCES.CURR),2) AS PRICE3, "
                StrSql = StrSql + "ROUND((ITEM4.PRICE * PREFERENCES.CURR),2) AS PRICE4, "
                StrSql = StrSql + "ROUND((ITEM5.PRICE * PREFERENCES.CURR),2) AS PRICE5, "
                StrSql = StrSql + "ROUND((ITEM6.PRICE * PREFERENCES.CURR),2) AS PRICE6, "
                StrSql = StrSql + "ROUND((ITEM7.PRICE * PREFERENCES.CURR),2) AS PRICE7, "
                StrSql = StrSql + "ROUND((ITEM8.PRICE * PREFERENCES.CURR),2) AS PRICE8, "
                StrSql = StrSql + "ROUND((ITEM9.PRICE * PREFERENCES.CURR),2) AS PRICE9, "
                StrSql = StrSql + "ROUND((ITEM10.PRICE * PREFERENCES.CURR),2) AS PRICE10, "
                StrSql = StrSql + "ROUND((PALLETIN.P1 * PREFERENCES.CURR),2) AS Preferred1, "
                StrSql = StrSql + "ROUND((PALLETIN.P2 * PREFERENCES.CURR),2) AS Preferred2, "
                StrSql = StrSql + "ROUND((PALLETIN.P3 * PREFERENCES.CURR),2) AS Preferred3, "
                StrSql = StrSql + "ROUND((PALLETIN.P4 * PREFERENCES.CURR),2) AS Preferred4, "
                StrSql = StrSql + "ROUND((PALLETIN.P5 * PREFERENCES.CURR),2) AS Preferred5, "
                StrSql = StrSql + "ROUND((PALLETIN.P6 * PREFERENCES.CURR),2) AS Preferred6, "
                StrSql = StrSql + "ROUND((PALLETIN.P7 * PREFERENCES.CURR),2) AS Preferred7, "
                StrSql = StrSql + "ROUND((PALLETIN.P8 * PREFERENCES.CURR),2) AS Preferred8, "
                StrSql = StrSql + "ROUND((PALLETIN.P9 * PREFERENCES.CURR),2) AS Preferred9, "
                StrSql = StrSql + "ROUND((PALLETIN.P10 * PREFERENCES.CURR),2) AS Preferred10, "
                StrSql = StrSql + "PALLETIN.D1 AS DEPT1, "
                StrSql = StrSql + "PALLETIN.D2  AS DEPT2, "
                StrSql = StrSql + "PALLETIN.D3  AS DEPT3, "
                StrSql = StrSql + "PALLETIN.D4  AS DEPT4, "
                StrSql = StrSql + "PALLETIN.D5  AS DEPT5, "
                StrSql = StrSql + "PALLETIN.D6  AS DEPT6, "
                StrSql = StrSql + "PALLETIN.D7  AS DEPT7, "
                StrSql = StrSql + "PALLETIN.D8  AS DEPT8, "
                StrSql = StrSql + "PALLETIN.D9  AS DEPT9, "
                StrSql = StrSql + "PALLETIN.D10  AS DEPT10, "
                StrSql = StrSql + "PREFERENCES.UNITS, "
                StrSql = StrSql + "PREFERENCES.TITLE1, "
                StrSql = StrSql + "PREFERENCES.TITLE2, "
                StrSql = StrSql + "PREFERENCES.TITLE3, "
                StrSql = StrSql + "PREFERENCES.TITLE4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "PALLETIN "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID=PALLETIN.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM1.PALLETID = PALLETIN.M1 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM2.PALLETID = PALLETIN.M2 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM3.PALLETID = PALLETIN.M3 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM4.PALLETID = PALLETIN.M4 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM5.PALLETID = PALLETIN.M5 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM6.PALLETID = PALLETIN.M6 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM7.PALLETID = PALLETIN.M7 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM8.PALLETID = PALLETIN.M8 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM9.PALLETID = PALLETIN.M9 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PALLET  ITEM10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ITEM10.PALLETID = PALLETIN.M10 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT1.PROCID = PALLETIN.D1 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT2.PROCID = PALLETIN.D2 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT3.PROCID = PALLETIN.D3 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT4.PROCID = PALLETIN.D4 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT5.PROCID = PALLETIN.D5 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT6.PROCID = PALLETIN.D6 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT7.PROCID = PALLETIN.D7 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT8.PROCID = PALLETIN.D8 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT9.PROCID = PALLETIN.D9 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PROCESS  DEPT10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPT10.PROCID = PALLETIN.D10 "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "PALLETIN.CASEID IN  (" + Cases + ") "

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetItemCombo() As DropDownList
            Dim item As New DropDownList
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                Dim Dt As New DataTable()
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim Sql As String = "SELECT PALLETID, (PALLETDE1||' '|| PALLETDE2)AS ITEMDES FROM PALLET ORDER BY ITEMDES"
                Dt = odbUtil.FillDataTable(Sql, MyConnectionString)
                item.DataSource = Dt
                item.DataValueField = "PALLETID"
                item.DataTextField = "ITEMDES"
                item.DataBind()
                Return item
            Catch ex As Exception
                Return item
            End Try
        End Function

        Public Function GetDeptCombo() As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSqlCombo As String = "SELECT PROCID,(PROCDE1||' '||PROCDE2) AS DEPDES FROM PROCESS ORDER BY DEPDES"
                Dts = odbUtil.FillDataTable(StrSqlCombo, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetDeptConfigSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT  "
                StrSql = StrSql + "PLANTCONFIG.CASEID, "
                StrSql = StrSql + "( CASE WHEN PLANTCONFIG.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = PLANTCONFIG.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( PERMISSIONSCASES.CASEDE1|| ' ' ||PERMISSIONSCASES.CASEDE2) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = PLANTCONFIG.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "PLANTCONFIG.M1 AS D1P1, "
                StrSql = StrSql + "PLANTCONFIG.T1 AS D1P2, "
                StrSql = StrSql + "PLANTCONFIG.S1 AS D1P3, "
                StrSql = StrSql + "PLANTCONFIG.Y1 AS D1P4, "
                StrSql = StrSql + "PLANTCONFIG.D1 AS D1P5, "
                StrSql = StrSql + "PLANTCONFIG.Z1 AS D1P6, "
                StrSql = StrSql + "PLANTCONFIG.B1 AS D1P7, "
                StrSql = StrSql + "PLANTCONFIG.R1 AS D1P8, "
                StrSql = StrSql + "PLANTCONFIG.K1 AS D1P9, "
                StrSql = StrSql + "PLANTCONFIG.P1 AS D1P10, "
                StrSql = StrSql + "PLANTCONFIG.M2 AS D2P1, "
                StrSql = StrSql + "PLANTCONFIG.T2 AS D2P2, "
                StrSql = StrSql + "PLANTCONFIG.S2 AS D2P3, "
                StrSql = StrSql + "PLANTCONFIG.Y2 AS D2P4, "
                StrSql = StrSql + "PLANTCONFIG.D2 AS D2P5, "
                StrSql = StrSql + "PLANTCONFIG.Z2 AS D2P6, "
                StrSql = StrSql + "PLANTCONFIG.B2 AS D2P7, "
                StrSql = StrSql + "PLANTCONFIG.R2 AS D2P8, "
                StrSql = StrSql + "PLANTCONFIG.K2 AS D2P9, "
                StrSql = StrSql + "PLANTCONFIG.P2 AS D2P10, "
                StrSql = StrSql + "PLANTCONFIG.M3 AS D3P1, "
                StrSql = StrSql + "PLANTCONFIG.T3 AS D3P2, "
                StrSql = StrSql + "PLANTCONFIG.S3 AS D3P3, "
                StrSql = StrSql + "PLANTCONFIG.Y3 AS D3P4, "
                StrSql = StrSql + "PLANTCONFIG.D3 AS D3P5, "
                StrSql = StrSql + "PLANTCONFIG.Z3 AS D3P6, "
                StrSql = StrSql + "PLANTCONFIG.B3 AS D3P7, "
                StrSql = StrSql + "PLANTCONFIG.R3 AS D3P8, "
                StrSql = StrSql + "PLANTCONFIG.K3 AS D3P9, "
                StrSql = StrSql + "PLANTCONFIG.P3 AS D3P10, "
                StrSql = StrSql + "PLANTCONFIG.M4 AS D4P1, "
                StrSql = StrSql + "PLANTCONFIG.T4 AS D4P2, "
                StrSql = StrSql + "PLANTCONFIG.S4 AS D4P3, "
                StrSql = StrSql + "PLANTCONFIG.Y4 AS D4P4, "
                StrSql = StrSql + "PLANTCONFIG.D4 AS D4P5, "
                StrSql = StrSql + "PLANTCONFIG.Z4 AS D4P6, "
                StrSql = StrSql + "PLANTCONFIG.B4 AS D4P7, "
                StrSql = StrSql + "PLANTCONFIG.R4 AS D4P8, "
                StrSql = StrSql + "PLANTCONFIG.K4 AS D4P9, "
                StrSql = StrSql + "PLANTCONFIG.P4 AS D4P10, "
                StrSql = StrSql + "PLANTCONFIG.M5 AS D5P1, "
                StrSql = StrSql + "PLANTCONFIG.T5 AS D5P2, "
                StrSql = StrSql + "PLANTCONFIG.S5 AS D5P3, "
                StrSql = StrSql + "PLANTCONFIG.Y5 AS D5P4, "
                StrSql = StrSql + "PLANTCONFIG.D5 AS D5P5, "
                StrSql = StrSql + "PLANTCONFIG.Z5 AS D5P6, "
                StrSql = StrSql + "PLANTCONFIG.B5 AS D5P7, "
                StrSql = StrSql + "PLANTCONFIG.R5 AS D5P8, "
                StrSql = StrSql + "PLANTCONFIG.K5 AS D5P9, "
                StrSql = StrSql + "PLANTCONFIG.P5 AS D5P10, "
                StrSql = StrSql + "PLANTCONFIG.M6 AS D6P1, "
                StrSql = StrSql + "PLANTCONFIG.T6 AS D6P2, "
                StrSql = StrSql + "PLANTCONFIG.S6 AS D6P3, "
                StrSql = StrSql + "PLANTCONFIG.Y6 AS D6P4, "
                StrSql = StrSql + "PLANTCONFIG.D6 AS D6P5, "
                StrSql = StrSql + "PLANTCONFIG.Z6 AS D6P6, "
                StrSql = StrSql + "PLANTCONFIG.B6 AS D6P7, "
                StrSql = StrSql + "PLANTCONFIG.R6 AS D6P8, "
                StrSql = StrSql + "PLANTCONFIG.K6 AS D6P9, "
                StrSql = StrSql + "PLANTCONFIG.P6 AS D6P10, "
                StrSql = StrSql + "PLANTCONFIG.M7 AS D7P1, "
                StrSql = StrSql + "PLANTCONFIG.T7 AS D7P2, "
                StrSql = StrSql + "PLANTCONFIG.S7 AS D7P3, "
                StrSql = StrSql + "PLANTCONFIG.Y7 AS D7P4, "
                StrSql = StrSql + "PLANTCONFIG.D7 AS D7P5, "
                StrSql = StrSql + "PLANTCONFIG.Z7 AS D7P6, "
                StrSql = StrSql + "PLANTCONFIG.B7 AS D7P7, "
                StrSql = StrSql + "PLANTCONFIG.R7 AS D7P8, "
                StrSql = StrSql + "PLANTCONFIG.K7 AS D7P9, "
                StrSql = StrSql + "PLANTCONFIG.P7 AS D7P10, "
                StrSql = StrSql + "PLANTCONFIG.M8 AS D8P1, "
                StrSql = StrSql + "PLANTCONFIG.T8 AS D8P2, "
                StrSql = StrSql + "PLANTCONFIG.S8 AS D8P3, "
                StrSql = StrSql + "PLANTCONFIG.Y8 AS D8P4, "
                StrSql = StrSql + "PLANTCONFIG.D8 AS D8P5, "
                StrSql = StrSql + "PLANTCONFIG.Z8 AS D8P6, "
                StrSql = StrSql + "PLANTCONFIG.B8 AS D8P7, "
                StrSql = StrSql + "PLANTCONFIG.R8 AS D8P8, "
                StrSql = StrSql + "PLANTCONFIG.K8 AS D8P9, "
                StrSql = StrSql + "PLANTCONFIG.P8 AS D8P10, "
                StrSql = StrSql + "PLANTCONFIG.M9 AS D9P1, "
                StrSql = StrSql + "PLANTCONFIG.T9 AS D9P2, "
                StrSql = StrSql + "PLANTCONFIG.S9 AS D9P3, "
                StrSql = StrSql + "PLANTCONFIG.Y9 AS D9P4, "
                StrSql = StrSql + "PLANTCONFIG.D9 AS D9P5, "
                StrSql = StrSql + "PLANTCONFIG.Z9 AS D9P6, "
                StrSql = StrSql + "PLANTCONFIG.B9 AS D9P7, "
                StrSql = StrSql + "PLANTCONFIG.R9 AS D9P8, "
                StrSql = StrSql + "PLANTCONFIG.K9 AS D9P9, "
                StrSql = StrSql + "PLANTCONFIG.P9 AS D9P10, "
                StrSql = StrSql + "PLANTCONFIG.M10 AS D10P1, "
                StrSql = StrSql + "PLANTCONFIG.T10 AS D10P2, "
                StrSql = StrSql + "PLANTCONFIG.S10 AS D10P3, "
                StrSql = StrSql + "PLANTCONFIG.Y10 AS D10P4, "
                StrSql = StrSql + "PLANTCONFIG.D10 AS D10P5, "
                StrSql = StrSql + "PLANTCONFIG.Z10 AS D10P6, "
                StrSql = StrSql + "PLANTCONFIG.B10 AS D10P7, "
                StrSql = StrSql + "PLANTCONFIG.R10 AS D10P8, "
                StrSql = StrSql + "PLANTCONFIG.K10 AS D10P9, "
                StrSql = StrSql + "PLANTCONFIG.P10 AS D10P10 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "PLANTCONFIG "
                StrSql = StrSql + "WHERE  PLANTCONFIG.CASEID IN(" + Cases + ") "
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetEfficiencySql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "Select Distinct "
                StrSql = StrSql + "MaterialEFF.CASEID, "
                StrSql = StrSql + "( Case when MaterialEFF.caseid <= 1000 then "
                StrSql = StrSql + "( select (Basecases.Casede1||' '||Basecases.Casede2 ) "
                StrSql = StrSql + "from BaseCases "
                StrSql = StrSql + "where  BaseCases.caseId = MaterialEFF.caseid "
                StrSql = StrSql + ") else "
                StrSql = StrSql + "( select distinct ( nvl(PermissionsCases.Casede1,'') || ' ' || nvl(PermissionsCases.Casede2,'') ) "
                StrSql = StrSql + "from PermissionsCases "
                StrSql = StrSql + "where  PermissionsCases.caseId = MaterialEFF.caseid "
                StrSql = StrSql + "and PermissionsCases.username ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "end  ) as CASEDES , "
                StrSql = StrSql + "(Materials1.MatDe1 ||' '|| Materials1.MatDe2  )  as Material1Des, "
                StrSql = StrSql + "(Materials2.MatDe1 ||' '|| Materials2.MatDe2  )  as Material2Des, "
                StrSql = StrSql + "(Materials3.MatDe1 ||' '|| Materials3.MatDe2  )  as Material3Des, "
                StrSql = StrSql + "(Materials4.MatDe1 ||' '|| Materials4.MatDe2  )  as Material4Des, "
                StrSql = StrSql + "(Materials5.MatDe1 ||' '|| Materials5.MatDe2  )  as Material5Des, "
                StrSql = StrSql + "(Materials6.MatDe1 ||' '|| Materials6.MatDe2  )  as Material6Des, "
                StrSql = StrSql + "(Materials7.MatDe1 ||' '|| Materials7.MatDe2  )  as Material7Des, "
                StrSql = StrSql + "(Materials8.MatDe1 ||' '|| Materials8.MatDe2  )  as Material8Des, "
                StrSql = StrSql + "(Materials9.MatDe1 ||' '|| Materials9.MatDe2  )  as Material9Des, "
                StrSql = StrSql + "(Materials10.MatDe1 ||' '|| Materials10.MatDe2  )  as Material10Des, "
                StrSql = StrSql + "(Process1.ProcDE1 ||' '|| Process1.ProcDE2 ) as Process1Des, "
                StrSql = StrSql + "(Process2.ProcDE1 ||' '|| Process2.ProcDE2 ) as Process2Des, "
                StrSql = StrSql + "(Process3.ProcDE1 ||' '|| Process3.ProcDE2 ) as Process3Des, "
                StrSql = StrSql + "(Process4.ProcDE1 ||' '|| Process4.ProcDE2 ) as Process4Des, "
                StrSql = StrSql + "(Process5.ProcDE1 ||' '|| Process5.ProcDE2 ) as Process5Des, "
                StrSql = StrSql + "(Process6.ProcDE1 ||' '|| Process6.ProcDE2 ) as Process6Des, "
                StrSql = StrSql + "(Process7.ProcDE1 ||' '|| Process7.ProcDE2 ) as Process7Des, "
                StrSql = StrSql + "(Process8.ProcDE1 ||' '|| Process8.ProcDE2 ) as Process8Des, "
                StrSql = StrSql + "(Process9.ProcDE1 ||' '|| Process9.ProcDE2 ) as Process9Des, "
                StrSql = StrSql + "(Process10.ProcDE1 ||' '|| Process10.ProcDE2 ) as Process10Des, "
                StrSql = StrSql + "MaterialEFF.T1 as Layer1Dept1, "
                StrSql = StrSql + "MaterialEFF.T2 as Layer1Dept2, "
                StrSql = StrSql + "MaterialEFF.T3 as Layer1Dept3, "
                StrSql = StrSql + "MaterialEFF.T4 as Layer1Dept4, "
                StrSql = StrSql + "MaterialEFF.T5 as Layer1Dept5, "
                StrSql = StrSql + "MaterialEFF.T6 as Layer1Dept6, "
                StrSql = StrSql + "MaterialEFF.T7 as Layer1Dept7, "
                StrSql = StrSql + "MaterialEFF.T8 as Layer1Dept8, "
                StrSql = StrSql + "MaterialEFF.T9 as Layer1Dept9, "
                StrSql = StrSql + "MaterialEFF.T10 as Layer1Dept10, "
                StrSql = StrSql + "MaterialEFF.S1 as Layer2Dept1, "
                StrSql = StrSql + "MaterialEFF.S2 as Layer2Dept2, "
                StrSql = StrSql + "MaterialEFF.S3 as Layer2Dept3, "
                StrSql = StrSql + "MaterialEFF.S4 as Layer2Dept4, "
                StrSql = StrSql + "MaterialEFF.S5 as Layer2Dept5, "
                StrSql = StrSql + "MaterialEFF.S6 as Layer2Dept6, "
                StrSql = StrSql + "MaterialEFF.S7 as Layer2Dept7, "
                StrSql = StrSql + "MaterialEFF.S8 as Layer2Dept8, "
                StrSql = StrSql + "MaterialEFF.S9 as Layer2Dept9, "
                StrSql = StrSql + "MaterialEFF.S10 as Layer2Dept10, "
                StrSql = StrSql + "MaterialEFF.Y1 as Layer3Dept1, "
                StrSql = StrSql + "MaterialEFF.Y2 as Layer3Dept2, "
                StrSql = StrSql + "MaterialEFF.Y3 as Layer3Dept3, "
                StrSql = StrSql + "MaterialEFF.Y4 as Layer3Dept4, "
                StrSql = StrSql + "MaterialEFF.Y5 as Layer3Dept5, "
                StrSql = StrSql + "MaterialEFF.Y6 as Layer3Dept6, "
                StrSql = StrSql + "MaterialEFF.Y7 as Layer3Dept7, "
                StrSql = StrSql + "MaterialEFF.Y8 as Layer3Dept8, "
                StrSql = StrSql + "MaterialEFF.Y9 as Layer3Dept9, "
                StrSql = StrSql + "MaterialEFF.Y10 as Layer3Dept10, "
                StrSql = StrSql + "MaterialEFF.D1 as Layer4Dept1, "
                StrSql = StrSql + "MaterialEFF.D2 as Layer4Dept2, "
                StrSql = StrSql + "MaterialEFF.D3 as Layer4Dept3, "
                StrSql = StrSql + "MaterialEFF.D4 as Layer4Dept4, "
                StrSql = StrSql + "MaterialEFF.D5 as Layer4Dept5, "
                StrSql = StrSql + "MaterialEFF.D6 as Layer4Dept6, "
                StrSql = StrSql + "MaterialEFF.D7 as Layer4Dept7, "
                StrSql = StrSql + "MaterialEFF.D8 as Layer4Dept8, "
                StrSql = StrSql + "MaterialEFF.D9 as Layer4Dept9, "
                StrSql = StrSql + "MaterialEFF.D10 as Layer4Dept10, "
                StrSql = StrSql + "MaterialEFF.E1 as Layer5Dept1, "
                StrSql = StrSql + "MaterialEFF.E2 as Layer5Dept2, "
                StrSql = StrSql + "MaterialEFF.E3 as Layer5Dept3, "
                StrSql = StrSql + "MaterialEFF.E4 as Layer5Dept4, "
                StrSql = StrSql + "MaterialEFF.E5 as Layer5Dept5, "
                StrSql = StrSql + "MaterialEFF.E6 as Layer5Dept6, "
                StrSql = StrSql + "MaterialEFF.E7 as Layer5Dept7, "
                StrSql = StrSql + "MaterialEFF.E8 as Layer5Dept8, "
                StrSql = StrSql + "MaterialEFF.E9 as Layer5Dept9, "
                StrSql = StrSql + "MaterialEFF.E10 as Layer5Dept10, "
                StrSql = StrSql + "MaterialEFF.Z1 as Layer6Dept1, "
                StrSql = StrSql + "MaterialEFF.Z2 as Layer6Dept2, "
                StrSql = StrSql + "MaterialEFF.Z3 as Layer6Dept3, "
                StrSql = StrSql + "MaterialEFF.Z4 as Layer6Dept4, "
                StrSql = StrSql + "MaterialEFF.Z5 as Layer6Dept5, "
                StrSql = StrSql + "MaterialEFF.Z6 as Layer6Dept6, "
                StrSql = StrSql + "MaterialEFF.Z7 as Layer6Dept7, "
                StrSql = StrSql + "MaterialEFF.Z8 as Layer6Dept8, "
                StrSql = StrSql + "MaterialEFF.Z9 as Layer6Dept9, "
                StrSql = StrSql + "MaterialEFF.Z10 as Layer6Dept10, "
                StrSql = StrSql + "MaterialEFF.B1 as Layer7Dept1, "
                StrSql = StrSql + "MaterialEFF.B2 as Layer7Dept2, "
                StrSql = StrSql + "MaterialEFF.B3 as Layer7Dept3, "
                StrSql = StrSql + "MaterialEFF.B4 as Layer7Dept4, "
                StrSql = StrSql + "MaterialEFF.B5 as Layer7Dept5, "
                StrSql = StrSql + "MaterialEFF.B6 as Layer7Dept6, "
                StrSql = StrSql + "MaterialEFF.B7 as Layer7Dept7, "
                StrSql = StrSql + "MaterialEFF.B8 as Layer7Dept8, "
                StrSql = StrSql + "MaterialEFF.B9 as Layer7Dept9, "
                StrSql = StrSql + "MaterialEFF.B10 as Layer7Dept10, "
                StrSql = StrSql + "MaterialEFF.R1 as Layer8Dept1, "
                StrSql = StrSql + "MaterialEFF.R2 as Layer8Dept2, "
                StrSql = StrSql + "MaterialEFF.R3 as Layer8Dept3, "
                StrSql = StrSql + "MaterialEFF.R4 as Layer8Dept4, "
                StrSql = StrSql + "MaterialEFF.R5 as Layer8Dept5, "
                StrSql = StrSql + "MaterialEFF.R6 as Layer8Dept6, "
                StrSql = StrSql + "MaterialEFF.R7 as Layer8Dept7, "
                StrSql = StrSql + "MaterialEFF.R8 as Layer8Dept8, "
                StrSql = StrSql + "MaterialEFF.R9 as Layer8Dept9, "
                StrSql = StrSql + "MaterialEFF.R10 as Layer8Dept10, "
                StrSql = StrSql + "MaterialEFF.K1 as Layer9Dept1, "
                StrSql = StrSql + "MaterialEFF.K2 as Layer9Dept2, "
                StrSql = StrSql + "MaterialEFF.K3 as Layer9Dept3, "
                StrSql = StrSql + "MaterialEFF.K4 as Layer9Dept4, "
                StrSql = StrSql + "MaterialEFF.K5 as Layer9Dept5, "
                StrSql = StrSql + "MaterialEFF.K6 as Layer9Dept6, "
                StrSql = StrSql + "MaterialEFF.K7 as Layer9Dept7, "
                StrSql = StrSql + "MaterialEFF.K8 as Layer9Dept8, "
                StrSql = StrSql + "MaterialEFF.K9 as Layer9Dept9, "
                StrSql = StrSql + "MaterialEFF.K10 as Layer9Dept10, "
                StrSql = StrSql + "MaterialEFF.P1 as Layer10Dept1, "
                StrSql = StrSql + "MaterialEFF.P2 as Layer10Dept2, "
                StrSql = StrSql + "MaterialEFF.P3 as Layer10Dept3, "
                StrSql = StrSql + "MaterialEFF.P4 as Layer10Dept4, "
                StrSql = StrSql + "MaterialEFF.P5 as Layer10Dept5, "
                StrSql = StrSql + "MaterialEFF.P6 as Layer10Dept6, "
                StrSql = StrSql + "MaterialEFF.P7 as Layer10Dept7, "
                StrSql = StrSql + "MaterialEFF.P8 as Layer10Dept8, "
                StrSql = StrSql + "MaterialEFF.P9 as Layer10Dept9, "
                StrSql = StrSql + "MaterialEFF.P10 as Layer10Dept10 "
                StrSql = StrSql + "From "
                StrSql = StrSql + "MaterialEFF "
                StrSql = StrSql + "inner join "
                StrSql = StrSql + "MaterialInput "
                StrSql = StrSql + "on "
                StrSql = StrSql + "MaterialInput.caseid = MaterialEFF.Caseid "
                StrSql = StrSql + "inner join "
                StrSql = StrSql + "PlantCONFIG "
                StrSql = StrSql + "on "
                StrSql = StrSql + "PlantCONFIG.caseid = MaterialEFF.Caseid "
                StrSql = StrSql + "inner join Materials Materials1 "
                StrSql = StrSql + "on Materials1.MatID = MaterialInput.M1 "
                StrSql = StrSql + "inner join Materials Materials2 "
                StrSql = StrSql + "on Materials2.MatID = MaterialInput.M2 "
                StrSql = StrSql + "inner join Materials Materials3 "
                StrSql = StrSql + "on Materials3.MatID = MaterialInput.M3 "
                StrSql = StrSql + "inner join Materials Materials4 "
                StrSql = StrSql + "on Materials4.MatID = MaterialInput.M4 "
                StrSql = StrSql + "inner join Materials Materials5 "
                StrSql = StrSql + "on Materials5.MatID = MaterialInput.M5 "
                StrSql = StrSql + "inner join Materials Materials6 "
                StrSql = StrSql + "on Materials6.MatID = MaterialInput.M6 "
                StrSql = StrSql + "inner join Materials Materials7 "
                StrSql = StrSql + "on Materials7.MatID = MaterialInput.M7 "
                StrSql = StrSql + "inner join Materials Materials8 "
                StrSql = StrSql + "on Materials8.MatID = MaterialInput.M8 "
                StrSql = StrSql + "inner join Materials Materials9 "
                StrSql = StrSql + "on Materials9.MatID = MaterialInput.M9 "
                StrSql = StrSql + "inner join Materials Materials10 "
                StrSql = StrSql + "on Materials10.MatID = MaterialInput.M10 "
                StrSql = StrSql + "inner join Process Process1 "
                StrSql = StrSql + "on Process1.ProcID = PlantCONFIG.M1 "
                StrSql = StrSql + "inner join Process Process2 "
                StrSql = StrSql + "on Process2.ProcID = PlantCONFIG.M2 "
                StrSql = StrSql + "inner join Process Process3 "
                StrSql = StrSql + "on Process3.ProcID = PlantCONFIG.M3 "
                StrSql = StrSql + "inner join Process Process4 "
                StrSql = StrSql + "on Process4.ProcID = PlantCONFIG.M4 "
                StrSql = StrSql + "inner join Process Process5 "
                StrSql = StrSql + "on Process5.ProcID = PlantCONFIG.M5 "
                StrSql = StrSql + "inner join Process Process6 "
                StrSql = StrSql + "on Process6.ProcID = PlantCONFIG.M6 "
                StrSql = StrSql + "inner join Process Process7 "
                StrSql = StrSql + "on Process7.ProcID = PlantCONFIG.M7 "
                StrSql = StrSql + "inner join Process Process8 "
                StrSql = StrSql + "on Process8.ProcID = PlantCONFIG.M8 "
                StrSql = StrSql + "inner join Process Process9 "
                StrSql = StrSql + "on Process9.ProcID = PlantCONFIG.M9 "
                StrSql = StrSql + "inner join Process Process10 "
                StrSql = StrSql + "on Process10.ProcID = PlantCONFIG.M10 "
                StrSql = StrSql + "Where "
                StrSql = StrSql + "MaterialEFF.caseid in(" + Cases + ") "
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetEquipmentCombo(ByVal WhichCombo As String) As DropDownList
            Dim EquipCombo As New DropDownList
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSqlCombo As String = ""

                If WhichCombo = "EQUIPMENT" Then
                    StrSqlCombo = "SELECT EQUIPID,(EQUIPDE1||' '||EQUIPDE2) AS EQUIPDES FROM EQUIPMENT ORDER BY  EQUIPDES"
                ElseIf WhichCombo = "EQUIPMENT2" Then
                    StrSqlCombo = "SELECT EQUIPID,(EQUIPDE1||' '||EQUIPDE2) AS EQUIPDES FROM EQUIPMENT2 ORDER BY  EQUIPDES"
                End If

                Dim Dt As New DataTable()
                Dt = odbUtil.FillDataTable(StrSqlCombo, MyConnectionString)
                EquipCombo.DataSource = Dt
                EquipCombo.DataValueField = "EQUIPID"
                EquipCombo.DataTextField = "EQUIPDES"
                EquipCombo.DataBind()
                Return EquipCombo
            Catch ex As Exception
                Throw
                Return EquipCombo
            End Try
        End Function

        Public Function GetProcessEquipmentSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'Database Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                'Sql 
                StrSql = "SELECT  DISTINCT  "
                StrSql = StrSql + "EQUIPMENTTYPE.CASEID, "
                StrSql = StrSql + "( CASE WHEN EQUIPMENTTYPE.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( PERMISSIONSCASES.CASEDE1|| ' ' ||PERMISSIONSCASES.CASEDE2) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "
                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "EQUIPMENTTYPE.M1 AS ASSETTYPE1, "
                StrSql = StrSql + "EQUIPMENTTYPE.M2 AS ASSETTYPE2, "
                StrSql = StrSql + "EQUIPMENTTYPE.M3 AS ASSETTYPE3, "
                StrSql = StrSql + "EQUIPMENTTYPE.M4 AS ASSETTYPE4, "
                StrSql = StrSql + "EQUIPMENTTYPE.M5 AS ASSETTYPE5, "
                StrSql = StrSql + "EQUIPMENTTYPE.M6 AS ASSETTYPE6, "
                StrSql = StrSql + "EQUIPMENTTYPE.M7 AS ASSETTYPE7, "
                StrSql = StrSql + "EQUIPMENTTYPE.M8 AS ASSETTYPE8, "
                StrSql = StrSql + "EQUIPMENTTYPE.M9 AS ASSETTYPE9, "
                StrSql = StrSql + "EQUIPMENTTYPE.M10 AS ASSETTYPE10, "
                StrSql = StrSql + "EQUIPMENTTYPE.M11 AS ASSETTYPE11, "
                StrSql = StrSql + "EQUIPMENTTYPE.M12 AS ASSETTYPE12, "
                StrSql = StrSql + "EQUIPMENTTYPE.M13 AS ASSETTYPE13, "
                StrSql = StrSql + "EQUIPMENTTYPE.M14 AS ASSETTYPE14, "
                StrSql = StrSql + "EQUIPMENTTYPE.M15 AS ASSETTYPE15, "
                StrSql = StrSql + "EQUIPMENTTYPE.M16 AS ASSETTYPE16, "
                StrSql = StrSql + "EQUIPMENTTYPE.M17 AS ASSETTYPE17, "
                StrSql = StrSql + "EQUIPMENTTYPE.M18 AS ASSETTYPE18, "
                StrSql = StrSql + "EQUIPMENTTYPE.M19 AS ASSETTYPE19, "
                StrSql = StrSql + "EQUIPMENTTYPE.M20 AS ASSETTYPE20, "
                StrSql = StrSql + "EQUIPMENTTYPE.M21 AS ASSETTYPE21, "
                StrSql = StrSql + "EQUIPMENTTYPE.M22 AS ASSETTYPE22, "
                StrSql = StrSql + "EQUIPMENTTYPE.M23 AS ASSETTYPE23, "
                StrSql = StrSql + "EQUIPMENTTYPE.M24 AS ASSETTYPE24, "
                StrSql = StrSql + "EQUIPMENTTYPE.M25 AS ASSETTYPE25, "
                StrSql = StrSql + "EQUIPMENTTYPE.M26 AS ASSETTYPE26, "
                StrSql = StrSql + "EQUIPMENTTYPE.M27 AS ASSETTYPE27, "
                StrSql = StrSql + "EQUIPMENTTYPE.M28 AS ASSETTYPE28, "
                StrSql = StrSql + "EQUIPMENTTYPE.M29 AS ASSETTYPE29, "
                StrSql = StrSql + "EQUIPMENTTYPE.M30 AS ASSETTYPE30, "
                StrSql = StrSql + "(ASSET1.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED1, "
                StrSql = StrSql + "(ASSET2.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED2, "
                StrSql = StrSql + "(ASSET3.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED3, "
                StrSql = StrSql + "(ASSET4.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED4, "
                StrSql = StrSql + "(ASSET5.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED5, "
                StrSql = StrSql + "(ASSET6.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED6, "
                StrSql = StrSql + "(ASSET7.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED7, "
                StrSql = StrSql + "(ASSET8.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED8, "
                StrSql = StrSql + "(ASSET9.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED9, "
                StrSql = StrSql + "(ASSET10.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED10, "
                StrSql = StrSql + "(ASSET11.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED11, "
                StrSql = StrSql + "(ASSET12.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED12, "
                StrSql = StrSql + "(ASSET13.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED13, "
                StrSql = StrSql + "(ASSET14.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED14, "
                StrSql = StrSql + "(ASSET15.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED15, "
                StrSql = StrSql + "(ASSET16.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED16, "
                StrSql = StrSql + "(ASSET17.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED17, "
                StrSql = StrSql + "(ASSET18.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED18, "
                StrSql = StrSql + "(ASSET19.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED19, "
                StrSql = StrSql + "(ASSET20.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED20, "
                StrSql = StrSql + "(ASSET21.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED21, "
                StrSql = StrSql + "(ASSET22.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED22, "
                StrSql = StrSql + "(ASSET23.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED23, "
                StrSql = StrSql + "(ASSET24.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED24, "
                StrSql = StrSql + "(ASSET25.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED25, "
                StrSql = StrSql + "(ASSET26.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED26, "
                StrSql = StrSql + "(ASSET27.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED27, "
                StrSql = StrSql + "(ASSET28.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED28, "
                StrSql = StrSql + "(ASSET29.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED29, "
                StrSql = StrSql + "(ASSET30.COST * PREFERENCES.CURR) AS ASSESTSUGGESTED30, "
                StrSql = StrSql + "(EQUIPMENTCOST.M1 * PREFERENCES.CURR) AS ASSESTPREFERRED1, "
                StrSql = StrSql + "(EQUIPMENTCOST.M2 * PREFERENCES.CURR) AS ASSESTPREFERRED2, "
                StrSql = StrSql + "(EQUIPMENTCOST.M3 * PREFERENCES.CURR) AS ASSESTPREFERRED3, "
                StrSql = StrSql + "(EQUIPMENTCOST.M4 * PREFERENCES.CURR) AS ASSESTPREFERRED4, "
                StrSql = StrSql + "(EQUIPMENTCOST.M5 * PREFERENCES.CURR) AS ASSESTPREFERRED5, "
                StrSql = StrSql + "(EQUIPMENTCOST.M6 * PREFERENCES.CURR) AS ASSESTPREFERRED6, "
                StrSql = StrSql + "(EQUIPMENTCOST.M7 * PREFERENCES.CURR) AS ASSESTPREFERRED7, "
                StrSql = StrSql + "(EQUIPMENTCOST.M8 * PREFERENCES.CURR) AS ASSESTPREFERRED8, "
                StrSql = StrSql + "(EQUIPMENTCOST.M9 * PREFERENCES.CURR) AS ASSESTPREFERRED9, "
                StrSql = StrSql + "(EQUIPMENTCOST.M10 * PREFERENCES.CURR) AS ASSESTPREFERRED10, "
                StrSql = StrSql + "(EQUIPMENTCOST.M11 * PREFERENCES.CURR) AS ASSESTPREFERRED11, "
                StrSql = StrSql + "(EQUIPMENTCOST.M12 * PREFERENCES.CURR) AS ASSESTPREFERRED12, "
                StrSql = StrSql + "(EQUIPMENTCOST.M13 * PREFERENCES.CURR) AS ASSESTPREFERRED13, "
                StrSql = StrSql + "(EQUIPMENTCOST.M14 * PREFERENCES.CURR) AS ASSESTPREFERRED14, "
                StrSql = StrSql + "(EQUIPMENTCOST.M15 * PREFERENCES.CURR) AS ASSESTPREFERRED15, "
                StrSql = StrSql + "(EQUIPMENTCOST.M16 * PREFERENCES.CURR) AS ASSESTPREFERRED16, "
                StrSql = StrSql + "(EQUIPMENTCOST.M17 * PREFERENCES.CURR) AS ASSESTPREFERRED17, "
                StrSql = StrSql + "(EQUIPMENTCOST.M18 * PREFERENCES.CURR) AS ASSESTPREFERRED18, "
                StrSql = StrSql + "(EQUIPMENTCOST.M19 * PREFERENCES.CURR) AS ASSESTPREFERRED19, "
                StrSql = StrSql + "(EQUIPMENTCOST.M20 * PREFERENCES.CURR) AS ASSESTPREFERRED20, "
                StrSql = StrSql + "(EQUIPMENTCOST.M21 * PREFERENCES.CURR) AS ASSESTPREFERRED21, "
                StrSql = StrSql + "(EQUIPMENTCOST.M22 * PREFERENCES.CURR) AS ASSESTPREFERRED22, "
                StrSql = StrSql + "(EQUIPMENTCOST.M23 * PREFERENCES.CURR) AS ASSESTPREFERRED23, "
                StrSql = StrSql + "(EQUIPMENTCOST.M24 * PREFERENCES.CURR) AS ASSESTPREFERRED24, "
                StrSql = StrSql + "(EQUIPMENTCOST.M25 * PREFERENCES.CURR) AS ASSESTPREFERRED25, "
                StrSql = StrSql + "(EQUIPMENTCOST.M26 * PREFERENCES.CURR) AS ASSESTPREFERRED26, "
                StrSql = StrSql + "(EQUIPMENTCOST.M27 * PREFERENCES.CURR) AS ASSESTPREFERRED27, "
                StrSql = StrSql + "(EQUIPMENTCOST.M28 * PREFERENCES.CURR) AS ASSESTPREFERRED28, "
                StrSql = StrSql + "(EQUIPMENTCOST.M29 * PREFERENCES.CURR) AS ASSESTPREFERRED29, "
                StrSql = StrSql + "(EQUIPMENTCOST.M30 * PREFERENCES.CURR) AS ASSESTPREFERRED30, "
                StrSql = StrSql + "(AREA1.AREADE1||' '||AREA1.AREADE2) AS AREATYPE1, "
                StrSql = StrSql + "(AREA2.AREADE1||' '||AREA2.AREADE2) AS AREATYPE2, "
                StrSql = StrSql + "(AREA3.AREADE1||' '||AREA3.AREADE2) AS AREATYPE3, "
                StrSql = StrSql + "(AREA4.AREADE1||' '||AREA4.AREADE2) AS AREATYPE4, "
                StrSql = StrSql + "(AREA5.AREADE1||' '||AREA5.AREADE2) AS AREATYPE5, "
                StrSql = StrSql + "(AREA6.AREADE1||' '||AREA6.AREADE2) AS AREATYPE6, "
                StrSql = StrSql + "(AREA7.AREADE1||' '||AREA7.AREADE2) AS AREATYPE7, "
                StrSql = StrSql + "(AREA8.AREADE1||' '||AREA8.AREADE2) AS AREATYPE8, "
                StrSql = StrSql + "(AREA9.AREADE1||' '||AREA9.AREADE2) AS AREATYPE9, "
                StrSql = StrSql + "(AREA10.AREADE1||' '||AREA10.AREADE2) AS AREATYPE10, "
                StrSql = StrSql + "(AREA11.AREADE1||' '||AREA11.AREADE2) AS AREATYPE11, "
                StrSql = StrSql + "(AREA12.AREADE1||' '||AREA12.AREADE2) AS AREATYPE12, "
                StrSql = StrSql + "(AREA13.AREADE1||' '||AREA13.AREADE2) AS AREATYPE13, "
                StrSql = StrSql + "(AREA14.AREADE1||' '||AREA14.AREADE2) AS AREATYPE14, "
                StrSql = StrSql + "(AREA15.AREADE1||' '||AREA15.AREADE2) AS AREATYPE15, "
                StrSql = StrSql + "(AREA16.AREADE1||' '||AREA16.AREADE2) AS AREATYPE16, "
                StrSql = StrSql + "(AREA17.AREADE1||' '||AREA17.AREADE2) AS AREATYPE17, "
                StrSql = StrSql + "(AREA18.AREADE1||' '||AREA18.AREADE2) AS AREATYPE18, "
                StrSql = StrSql + "(AREA19.AREADE1||' '||AREA19.AREADE2) AS AREATYPE19, "
                StrSql = StrSql + "(AREA20.AREADE1||' '||AREA20.AREADE2) AS AREATYPE20, "
                StrSql = StrSql + "(AREA21.AREADE1||' '||AREA21.AREADE2) AS AREATYPE21, "
                StrSql = StrSql + "(AREA22.AREADE1||' '||AREA22.AREADE2) AS AREATYPE22, "
                StrSql = StrSql + "(AREA23.AREADE1||' '||AREA23.AREADE2) AS AREATYPE23, "
                StrSql = StrSql + "(AREA24.AREADE1||' '||AREA24.AREADE2) AS AREATYPE24, "
                StrSql = StrSql + "(AREA25.AREADE1||' '||AREA25.AREADE2) AS AREATYPE25, "
                StrSql = StrSql + "(AREA26.AREADE1||' '||AREA26.AREADE2) AS AREATYPE26, "
                StrSql = StrSql + "(AREA27.AREADE1||' '||AREA27.AREADE2) AS AREATYPE27, "
                StrSql = StrSql + "(AREA28.AREADE1||' '||AREA28.AREADE2) AS AREATYPE28, "
                StrSql = StrSql + "(AREA29.AREADE1||' '||AREA29.AREADE2) AS AREATYPE29, "
                StrSql = StrSql + "(AREA30.AREADE1||' '||AREA30.AREADE2) AS AREATYPE30, "
                StrSql = StrSql + "(ASSET1.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED1, "
                StrSql = StrSql + "(ASSET2.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED2, "
                StrSql = StrSql + "(ASSET3.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED3, "
                StrSql = StrSql + "(ASSET4.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED4, "
                StrSql = StrSql + "(ASSET5.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED5, "
                StrSql = StrSql + "(ASSET6.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED6, "
                StrSql = StrSql + "(ASSET7.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED7, "
                StrSql = StrSql + "(ASSET8.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED8, "
                StrSql = StrSql + "(ASSET9.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED9, "
                StrSql = StrSql + "(ASSET10.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED10, "
                StrSql = StrSql + "(ASSET11.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED11, "
                StrSql = StrSql + "(ASSET12.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED12, "
                StrSql = StrSql + "(ASSET13.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED13, "
                StrSql = StrSql + "(ASSET14.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED14, "
                StrSql = StrSql + "(ASSET15.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED15, "
                StrSql = StrSql + "(ASSET16.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED16, "
                StrSql = StrSql + "(ASSET17.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED17, "
                StrSql = StrSql + "(ASSET18.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED18, "
                StrSql = StrSql + "(ASSET19.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED19, "
                StrSql = StrSql + "(ASSET20.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED20, "
                StrSql = StrSql + "(ASSET21.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED21, "
                StrSql = StrSql + "(ASSET22.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED22, "
                StrSql = StrSql + "(ASSET23.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED23, "
                StrSql = StrSql + "(ASSET24.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED24, "
                StrSql = StrSql + "(ASSET25.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED25, "
                StrSql = StrSql + "(ASSET26.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED26, "
                StrSql = StrSql + "(ASSET27.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED27, "
                StrSql = StrSql + "(ASSET28.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED28, "
                StrSql = StrSql + "(ASSET29.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED29, "
                StrSql = StrSql + "(ASSET30.AREA * PREFERENCES.CONVAREA2) AS PLANTAREASUGGESTED30, "
                StrSql = StrSql + "(EQUIPMENTAREA.M1 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED1, "
                StrSql = StrSql + "(EQUIPMENTAREA.M2 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED2, "
                StrSql = StrSql + "(EQUIPMENTAREA.M3 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED3, "
                StrSql = StrSql + "(EQUIPMENTAREA.M4 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED4, "
                StrSql = StrSql + "(EQUIPMENTAREA.M5 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED5, "
                StrSql = StrSql + "(EQUIPMENTAREA.M6 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED6, "
                StrSql = StrSql + "(EQUIPMENTAREA.M7 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED7, "
                StrSql = StrSql + "(EQUIPMENTAREA.M8 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED8, "
                StrSql = StrSql + "(EQUIPMENTAREA.M9 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED9, "
                StrSql = StrSql + "(EQUIPMENTAREA.M10 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED10, "
                StrSql = StrSql + "(EQUIPMENTAREA.M11 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED11, "
                StrSql = StrSql + "(EQUIPMENTAREA.M12 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED12, "
                StrSql = StrSql + "(EQUIPMENTAREA.M13 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED13, "
                StrSql = StrSql + "(EQUIPMENTAREA.M14 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED14, "
                StrSql = StrSql + "(EQUIPMENTAREA.M15 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED15, "
                StrSql = StrSql + "(EQUIPMENTAREA.M16 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED16, "
                StrSql = StrSql + "(EQUIPMENTAREA.M17 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED17, "
                StrSql = StrSql + "(EQUIPMENTAREA.M18 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED18, "
                StrSql = StrSql + "(EQUIPMENTAREA.M19 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED19, "
                StrSql = StrSql + "(EQUIPMENTAREA.M20 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED20, "
                StrSql = StrSql + "(EQUIPMENTAREA.M21 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED21, "
                StrSql = StrSql + "(EQUIPMENTAREA.M22 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED22, "
                StrSql = StrSql + "(EQUIPMENTAREA.M23 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED23, "
                StrSql = StrSql + "(EQUIPMENTAREA.M24 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED24, "
                StrSql = StrSql + "(EQUIPMENTAREA.M25 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED25, "
                StrSql = StrSql + "(EQUIPMENTAREA.M26 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED26, "
                StrSql = StrSql + "(EQUIPMENTAREA.M27 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED27, "
                StrSql = StrSql + "(EQUIPMENTAREA.M28 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED28, "
                StrSql = StrSql + "(EQUIPMENTAREA.M29 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED29, "
                StrSql = StrSql + "(EQUIPMENTAREA.M30 * PREFERENCES.CONVAREA2) AS PLANTAREAPREFERRED30, "
                StrSql = StrSql + "(ASSET1.INSTKW ) AS PROCESSENERGYSUGGESTED1, "
                StrSql = StrSql + "(ASSET2.INSTKW ) AS PROCESSENERGYSUGGESTED2, "
                StrSql = StrSql + "(ASSET3.INSTKW ) AS PROCESSENERGYSUGGESTED3, "
                StrSql = StrSql + "(ASSET4.INSTKW ) AS PROCESSENERGYSUGGESTED4, "
                StrSql = StrSql + "(ASSET5.INSTKW ) AS PROCESSENERGYSUGGESTED5, "
                StrSql = StrSql + "(ASSET6.INSTKW ) AS PROCESSENERGYSUGGESTED6, "
                StrSql = StrSql + "(ASSET7.INSTKW ) AS PROCESSENERGYSUGGESTED7, "
                StrSql = StrSql + "(ASSET8.INSTKW ) AS PROCESSENERGYSUGGESTED8, "
                StrSql = StrSql + "(ASSET9.INSTKW ) AS PROCESSENERGYSUGGESTED9, "
                StrSql = StrSql + "(ASSET10.INSTKW ) AS PROCESSENERGYSUGGESTED10, "
                StrSql = StrSql + "(ASSET11.INSTKW ) AS PROCESSENERGYSUGGESTED11, "
                StrSql = StrSql + "(ASSET12.INSTKW ) AS PROCESSENERGYSUGGESTED12, "
                StrSql = StrSql + "(ASSET13.INSTKW ) AS PROCESSENERGYSUGGESTED13, "
                StrSql = StrSql + "(ASSET14.INSTKW ) AS PROCESSENERGYSUGGESTED14, "
                StrSql = StrSql + "(ASSET15.INSTKW ) AS PROCESSENERGYSUGGESTED15, "
                StrSql = StrSql + "(ASSET16.INSTKW ) AS PROCESSENERGYSUGGESTED16, "
                StrSql = StrSql + "(ASSET17.INSTKW ) AS PROCESSENERGYSUGGESTED17, "
                StrSql = StrSql + "(ASSET18.INSTKW ) AS PROCESSENERGYSUGGESTED18, "
                StrSql = StrSql + "(ASSET19.INSTKW ) AS PROCESSENERGYSUGGESTED19, "
                StrSql = StrSql + "(ASSET20.INSTKW ) AS PROCESSENERGYSUGGESTED20, "
                StrSql = StrSql + "(ASSET21.INSTKW ) AS PROCESSENERGYSUGGESTED21, "
                StrSql = StrSql + "(ASSET22.INSTKW ) AS PROCESSENERGYSUGGESTED22, "
                StrSql = StrSql + "(ASSET23.INSTKW ) AS PROCESSENERGYSUGGESTED23, "
                StrSql = StrSql + "(ASSET24.INSTKW ) AS PROCESSENERGYSUGGESTED24, "
                StrSql = StrSql + "(ASSET25.INSTKW ) AS PROCESSENERGYSUGGESTED25, "
                StrSql = StrSql + "(ASSET26.INSTKW ) AS PROCESSENERGYSUGGESTED26, "
                StrSql = StrSql + "(ASSET27.INSTKW ) AS PROCESSENERGYSUGGESTED27, "
                StrSql = StrSql + "(ASSET28.INSTKW ) AS PROCESSENERGYSUGGESTED28, "
                StrSql = StrSql + "(ASSET29.INSTKW ) AS PROCESSENERGYSUGGESTED29, "
                StrSql = StrSql + "(ASSET30.INSTKW ) AS PROCESSENERGYSUGGESTED30, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M1 ) AS PROCESSENERGYPREFERRED1, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M2 ) AS PROCESSENERGYPREFERRED2, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M3 ) AS PROCESSENERGYPREFERRED3, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M4 ) AS PROCESSENERGYPREFERRED4, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M5 ) AS PROCESSENERGYPREFERRED5, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M6 ) AS PROCESSENERGYPREFERRED6, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M7 ) AS PROCESSENERGYPREFERRED7, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M8 ) AS PROCESSENERGYPREFERRED8, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M9 ) AS PROCESSENERGYPREFERRED9, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M10 ) AS PROCESSENERGYPREFERRED10, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M11 ) AS PROCESSENERGYPREFERRED11, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M12 ) AS PROCESSENERGYPREFERRED12, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M13 ) AS PROCESSENERGYPREFERRED13, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M14 ) AS PROCESSENERGYPREFERRED14, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M15 ) AS PROCESSENERGYPREFERRED15, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M16 ) AS PROCESSENERGYPREFERRED16, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M17 ) AS PROCESSENERGYPREFERRED17, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M18 ) AS PROCESSENERGYPREFERRED18, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M19 ) AS PROCESSENERGYPREFERRED19, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M20 ) AS PROCESSENERGYPREFERRED20, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M21 ) AS PROCESSENERGYPREFERRED21, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M22 ) AS PROCESSENERGYPREFERRED22, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M23 ) AS PROCESSENERGYPREFERRED23, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M24 ) AS PROCESSENERGYPREFERRED24, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M25 ) AS PROCESSENERGYPREFERRED25, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M26 ) AS PROCESSENERGYPREFERRED26, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M27 ) AS PROCESSENERGYPREFERRED27, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M28 ) AS PROCESSENERGYPREFERRED28, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M29 ) AS PROCESSENERGYPREFERRED29, "
                StrSql = StrSql + "(EQUIPENERGYPREF.M30 ) AS PROCESSENERGYPREFERRED30, "
                StrSql = StrSql + "(EQUIPMENTDEP.M1 ) AS DEPT1, "
                StrSql = StrSql + "(EQUIPMENTDEP.M2 ) AS DEPT2, "
                StrSql = StrSql + "(EQUIPMENTDEP.M3 ) AS DEPT3, "
                StrSql = StrSql + "(EQUIPMENTDEP.M4 ) AS DEPT4, "
                StrSql = StrSql + "(EQUIPMENTDEP.M5 ) AS DEPT5, "
                StrSql = StrSql + "(EQUIPMENTDEP.M6 ) AS DEPT6, "
                StrSql = StrSql + "(EQUIPMENTDEP.M7 ) AS DEPT7, "
                StrSql = StrSql + "(EQUIPMENTDEP.M8 ) AS DEPT8, "
                StrSql = StrSql + "(EQUIPMENTDEP.M9 ) AS DEPT9, "
                StrSql = StrSql + "(EQUIPMENTDEP.M10 ) AS DEPT10, "
                StrSql = StrSql + "(EQUIPMENTDEP.M11 ) AS DEPT11, "
                StrSql = StrSql + "(EQUIPMENTDEP.M12 ) AS DEPT12, "
                StrSql = StrSql + "(EQUIPMENTDEP.M13 ) AS DEPT13, "
                StrSql = StrSql + "(EQUIPMENTDEP.M14 ) AS DEPT14, "
                StrSql = StrSql + "(EQUIPMENTDEP.M15 ) AS DEPT15, "
                StrSql = StrSql + "(EQUIPMENTDEP.M16 ) AS DEPT16, "
                StrSql = StrSql + "(EQUIPMENTDEP.M17 ) AS DEPT17, "
                StrSql = StrSql + "(EQUIPMENTDEP.M18 ) AS DEPT18, "
                StrSql = StrSql + "(EQUIPMENTDEP.M19 ) AS DEPT19, "
                StrSql = StrSql + "(EQUIPMENTDEP.M20 ) AS DEPT20, "
                StrSql = StrSql + "(EQUIPMENTDEP.M21 ) AS DEPT21, "
                StrSql = StrSql + "(EQUIPMENTDEP.M22 ) AS DEPT22, "
                StrSql = StrSql + "(EQUIPMENTDEP.M23 ) AS DEPT23, "
                StrSql = StrSql + "(EQUIPMENTDEP.M24 ) AS DEPT24, "
                StrSql = StrSql + "(EQUIPMENTDEP.M25 ) AS DEPT25, "
                StrSql = StrSql + "(EQUIPMENTDEP.M26 ) AS DEPT26, "
                StrSql = StrSql + "(EQUIPMENTDEP.M27 ) AS DEPT27, "
                StrSql = StrSql + "(EQUIPMENTDEP.M28 ) AS DEPT28, "
                StrSql = StrSql + "(EQUIPMENTDEP.M29 ) AS DEPT29, "
                StrSql = StrSql + "(EQUIPMENTDEP.M30 ) AS DEPT30, "
                StrSql = StrSql + "PREFERENCES.UNITS AS UNIT, "
                StrSql = StrSql + "PREFERENCES.TITLE1, "
                StrSql = StrSql + "PREFERENCES.TITLE2, "
                StrSql = StrSql + "PREFERENCES.TITLE3, "
                StrSql = StrSql + "PREFERENCES.TITLE4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "EQUIPMENTTYPE "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENTCOST "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIPMENTCOST.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENTAREA "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIPMENTAREA.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPENERGYPREF "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIPENERGYPREF.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENTDEP "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIPMENTDEP.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET1.EQUIPID = EQUIPMENTTYPE.M1 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET2.EQUIPID = EQUIPMENTTYPE.M2 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET3.EQUIPID = EQUIPMENTTYPE.M3 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET4.EQUIPID = EQUIPMENTTYPE.M4 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET5.EQUIPID = EQUIPMENTTYPE.M5 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET6.EQUIPID = EQUIPMENTTYPE.M6 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET7.EQUIPID = EQUIPMENTTYPE.M7 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET8.EQUIPID = EQUIPMENTTYPE.M8 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET9.EQUIPID = EQUIPMENTTYPE.M9 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET10.EQUIPID = EQUIPMENTTYPE.M10 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET11 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET11.EQUIPID = EQUIPMENTTYPE.M11 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET12 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET12.EQUIPID = EQUIPMENTTYPE.M12 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET13 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET13.EQUIPID = EQUIPMENTTYPE.M13 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET14 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET14.EQUIPID = EQUIPMENTTYPE.M14 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET15 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET15.EQUIPID = EQUIPMENTTYPE.M15 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET16 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET16.EQUIPID = EQUIPMENTTYPE.M16 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET17 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET17.EQUIPID = EQUIPMENTTYPE.M17 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET18 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET18.EQUIPID = EQUIPMENTTYPE.M18 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET19 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET19.EQUIPID = EQUIPMENTTYPE.M19 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET20 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET20.EQUIPID = EQUIPMENTTYPE.M20 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET21 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET21.EQUIPID = EQUIPMENTTYPE.M21 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET22 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET22.EQUIPID = EQUIPMENTTYPE.M22 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET23 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET23.EQUIPID = EQUIPMENTTYPE.M23 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET24 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET24.EQUIPID = EQUIPMENTTYPE.M24 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET25 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET25.EQUIPID = EQUIPMENTTYPE.M25 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET26 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET26.EQUIPID = EQUIPMENTTYPE.M26 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET27 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET27.EQUIPID = EQUIPMENTTYPE.M27 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET28 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET28.EQUIPID = EQUIPMENTTYPE.M28 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET29 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET29.EQUIPID = EQUIPMENTTYPE.M29 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT ASSET30 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET30.EQUIPID = EQUIPMENTTYPE.M30 "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET1.AREATYPE = AREA1.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET2.AREATYPE = AREA2.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET3.AREATYPE = AREA3.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET4.AREATYPE = AREA4.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET5.AREATYPE = AREA5.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET6.AREATYPE = AREA6.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET7.AREATYPE = AREA7.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET8.AREATYPE = AREA8.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET9.AREATYPE = AREA9.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET10.AREATYPE = AREA10.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA11 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET11.AREATYPE = AREA11.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA12 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET12.AREATYPE = AREA12.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA13 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET13.AREATYPE = AREA13.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA14 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET14.AREATYPE = AREA14.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA15 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET15.AREATYPE = AREA15.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA16 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET16.AREATYPE = AREA16.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA17 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET17.AREATYPE = AREA17.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA18 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET18.AREATYPE = AREA18.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA19 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET19.AREATYPE = AREA19.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA20 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET20.AREATYPE = AREA20.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA21 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET21.AREATYPE = AREA21.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA22 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET22.AREATYPE = AREA22.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA23 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET23.AREATYPE = AREA23.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA24 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET24.AREATYPE = AREA24.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA25 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET25.AREATYPE = AREA25.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA26 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET26.AREATYPE = AREA26.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA27 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET27.AREATYPE = AREA27.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA28 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET28.AREATYPE = AREA28.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA29 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET29.AREATYPE = AREA29.AREAID "
                StrSql = StrSql + "LEFT OUTER JOIN "
                StrSql = StrSql + "AREATYPE AREA30 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "ASSET30.AREATYPE = AREA30.AREAID "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "EQUIPMENTTYPE.CASEID IN(" + Cases + ") "

                'Fill the datatable
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetSupportEquipmentSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT  DISTINCT  "
                StrSql = StrSql + "Equipment2TYPE.CASEID, "
                StrSql = StrSql + "( CASE WHEN Equipment2TYPE.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = Equipment2TYPE.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( PERMISSIONSCASES.CASEDE1|| ' ' ||PERMISSIONSCASES.CASEDE2) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = Equipment2TYPE.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "Equipment2TYPE.M1 as Assettype1, "
                StrSql = StrSql + "Equipment2TYPE.M2 as Assettype2, "
                StrSql = StrSql + "Equipment2TYPE.M3 as Assettype3, "
                StrSql = StrSql + "Equipment2TYPE.M4 as Assettype4, "
                StrSql = StrSql + "Equipment2TYPE.M5 as Assettype5, "
                StrSql = StrSql + "Equipment2TYPE.M6 as Assettype6, "
                StrSql = StrSql + "Equipment2TYPE.M7 as Assettype7, "
                StrSql = StrSql + "Equipment2TYPE.M8 as Assettype8, "
                StrSql = StrSql + "Equipment2TYPE.M9 as Assettype9, "
                StrSql = StrSql + "Equipment2TYPE.M10 as Assettype10, "
                StrSql = StrSql + "Equipment2TYPE.M11 as Assettype11, "
                StrSql = StrSql + "Equipment2TYPE.M12 as Assettype12, "
                StrSql = StrSql + "Equipment2TYPE.M13 as Assettype13, "
                StrSql = StrSql + "Equipment2TYPE.M14 as Assettype14, "
                StrSql = StrSql + "Equipment2TYPE.M15 as Assettype15, "
                StrSql = StrSql + "Equipment2TYPE.M16 as Assettype16, "
                StrSql = StrSql + "Equipment2TYPE.M17 as Assettype17, "
                StrSql = StrSql + "Equipment2TYPE.M18 as Assettype18, "
                StrSql = StrSql + "Equipment2TYPE.M19 as Assettype19, "
                StrSql = StrSql + "Equipment2TYPE.M20 as Assettype20, "
                StrSql = StrSql + "Equipment2TYPE.M21 as Assettype21, "
                StrSql = StrSql + "Equipment2TYPE.M22 as Assettype22, "
                StrSql = StrSql + "Equipment2TYPE.M23 as Assettype23, "
                StrSql = StrSql + "Equipment2TYPE.M24 as Assettype24, "
                StrSql = StrSql + "Equipment2TYPE.M25 as Assettype25, "
                StrSql = StrSql + "Equipment2TYPE.M26 as Assettype26, "
                StrSql = StrSql + "Equipment2TYPE.M27 as Assettype27, "
                StrSql = StrSql + "Equipment2TYPE.M28 as Assettype28, "
                StrSql = StrSql + "Equipment2TYPE.M29 as Assettype29, "
                StrSql = StrSql + "Equipment2TYPE.M30 as Assettype30, "
                StrSql = StrSql + "(Asset1.Cost * PREFERENCES.CURR) as AssestSuggested1, "
                StrSql = StrSql + "(Asset2.Cost * PREFERENCES.CURR) as AssestSuggested2, "
                StrSql = StrSql + "(Asset3.Cost * PREFERENCES.CURR) as AssestSuggested3, "
                StrSql = StrSql + "(Asset4.Cost * PREFERENCES.CURR) as AssestSuggested4, "
                StrSql = StrSql + "(Asset5.Cost * PREFERENCES.CURR) as AssestSuggested5, "
                StrSql = StrSql + "(Asset6.Cost * PREFERENCES.CURR) as AssestSuggested6, "
                StrSql = StrSql + "(Asset7.Cost * PREFERENCES.CURR) as AssestSuggested7, "
                StrSql = StrSql + "(Asset8.Cost * PREFERENCES.CURR) as AssestSuggested8, "
                StrSql = StrSql + "(Asset9.Cost * PREFERENCES.CURR) as AssestSuggested9, "
                StrSql = StrSql + "(Asset10.Cost * PREFERENCES.CURR) as AssestSuggested10, "
                StrSql = StrSql + "(Asset11.Cost * PREFERENCES.CURR) as AssestSuggested11, "
                StrSql = StrSql + "(Asset12.Cost * PREFERENCES.CURR) as AssestSuggested12, "
                StrSql = StrSql + "(Asset13.Cost * PREFERENCES.CURR) as AssestSuggested13, "
                StrSql = StrSql + "(Asset14.Cost * PREFERENCES.CURR) as AssestSuggested14, "
                StrSql = StrSql + "(Asset15.Cost * PREFERENCES.CURR) as AssestSuggested15, "
                StrSql = StrSql + "(Asset16.Cost * PREFERENCES.CURR) as AssestSuggested16, "
                StrSql = StrSql + "(Asset17.Cost * PREFERENCES.CURR) as AssestSuggested17, "
                StrSql = StrSql + "(Asset18.Cost * PREFERENCES.CURR) as AssestSuggested18, "
                StrSql = StrSql + "(Asset19.Cost * PREFERENCES.CURR) as AssestSuggested19, "
                StrSql = StrSql + "(Asset20.Cost * PREFERENCES.CURR) as AssestSuggested20, "
                StrSql = StrSql + "(Asset21.Cost * PREFERENCES.CURR) as AssestSuggested21, "
                StrSql = StrSql + "(Asset22.Cost * PREFERENCES.CURR) as AssestSuggested22, "
                StrSql = StrSql + "(Asset23.Cost * PREFERENCES.CURR) as AssestSuggested23, "
                StrSql = StrSql + "(Asset24.Cost * PREFERENCES.CURR) as AssestSuggested24, "
                StrSql = StrSql + "(Asset25.Cost * PREFERENCES.CURR) as AssestSuggested25, "
                StrSql = StrSql + "(Asset26.Cost * PREFERENCES.CURR) as AssestSuggested26, "
                StrSql = StrSql + "(Asset27.Cost * PREFERENCES.CURR) as AssestSuggested27, "
                StrSql = StrSql + "(Asset28.Cost * PREFERENCES.CURR) as AssestSuggested28, "
                StrSql = StrSql + "(Asset29.Cost * PREFERENCES.CURR) as AssestSuggested29, "
                StrSql = StrSql + "(Asset30.Cost * PREFERENCES.CURR) as AssestSuggested30, "
                StrSql = StrSql + "(Equipment2COST.M1 * PREFERENCES.CURR) as AssestPreferred1, "
                StrSql = StrSql + "(Equipment2COST.M2 * PREFERENCES.CURR) as AssestPreferred2, "
                StrSql = StrSql + "(Equipment2COST.M3 * PREFERENCES.CURR) as AssestPreferred3, "
                StrSql = StrSql + "(Equipment2COST.M4 * PREFERENCES.CURR) as AssestPreferred4, "
                StrSql = StrSql + "(Equipment2COST.M5 * PREFERENCES.CURR) as AssestPreferred5, "
                StrSql = StrSql + "(Equipment2COST.M6 * PREFERENCES.CURR) as AssestPreferred6, "
                StrSql = StrSql + "(Equipment2COST.M7 * PREFERENCES.CURR) as AssestPreferred7, "
                StrSql = StrSql + "(Equipment2COST.M8 * PREFERENCES.CURR) as AssestPreferred8, "
                StrSql = StrSql + "(Equipment2COST.M9 * PREFERENCES.CURR) as AssestPreferred9, "
                StrSql = StrSql + "(Equipment2COST.M10 * PREFERENCES.CURR) as AssestPreferred10, "
                StrSql = StrSql + "(Equipment2COST.M11 * PREFERENCES.CURR) as AssestPreferred11, "
                StrSql = StrSql + "(Equipment2COST.M12 * PREFERENCES.CURR) as AssestPreferred12, "
                StrSql = StrSql + "(Equipment2COST.M13 * PREFERENCES.CURR) as AssestPreferred13, "
                StrSql = StrSql + "(Equipment2COST.M14 * PREFERENCES.CURR) as AssestPreferred14, "
                StrSql = StrSql + "(Equipment2COST.M15 * PREFERENCES.CURR) as AssestPreferred15, "
                StrSql = StrSql + "(Equipment2COST.M16 * PREFERENCES.CURR) as AssestPreferred16, "
                StrSql = StrSql + "(Equipment2COST.M17 * PREFERENCES.CURR) as AssestPreferred17, "
                StrSql = StrSql + "(Equipment2COST.M18 * PREFERENCES.CURR) as AssestPreferred18, "
                StrSql = StrSql + "(Equipment2COST.M19 * PREFERENCES.CURR) as AssestPreferred19, "
                StrSql = StrSql + "(Equipment2COST.M20 * PREFERENCES.CURR) as AssestPreferred20, "
                StrSql = StrSql + "(Equipment2COST.M21 * PREFERENCES.CURR) as AssestPreferred21, "
                StrSql = StrSql + "(Equipment2COST.M22 * PREFERENCES.CURR) as AssestPreferred22, "
                StrSql = StrSql + "(Equipment2COST.M23 * PREFERENCES.CURR) as AssestPreferred23, "
                StrSql = StrSql + "(Equipment2COST.M24 * PREFERENCES.CURR) as AssestPreferred24, "
                StrSql = StrSql + "(Equipment2COST.M25 * PREFERENCES.CURR) as AssestPreferred25, "
                StrSql = StrSql + "(Equipment2COST.M26 * PREFERENCES.CURR) as AssestPreferred26, "
                StrSql = StrSql + "(Equipment2COST.M27 * PREFERENCES.CURR) as AssestPreferred27, "
                StrSql = StrSql + "(Equipment2COST.M28 * PREFERENCES.CURR) as AssestPreferred28, "
                StrSql = StrSql + "(Equipment2COST.M29 * PREFERENCES.CURR) as AssestPreferred29, "
                StrSql = StrSql + "(Equipment2COST.M30 * PREFERENCES.CURR) as AssestPreferred30, "
                StrSql = StrSql + "(Equipment2DEP.M1 ) as Dept1, "
                StrSql = StrSql + "(Equipment2DEP.M2 ) as Dept2, "
                StrSql = StrSql + "(Equipment2DEP.M3 ) as Dept3, "
                StrSql = StrSql + "(Equipment2DEP.M4 ) as Dept4, "
                StrSql = StrSql + "(Equipment2DEP.M5 ) as Dept5, "
                StrSql = StrSql + "(Equipment2DEP.M6 ) as Dept6, "
                StrSql = StrSql + "(Equipment2DEP.M7 ) as Dept7, "
                StrSql = StrSql + "(Equipment2DEP.M8 ) as Dept8, "
                StrSql = StrSql + "(Equipment2DEP.M9 ) as Dept9, "
                StrSql = StrSql + "(Equipment2DEP.M10 ) as Dept10, "
                StrSql = StrSql + "(Equipment2DEP.M11 ) as Dept11, "
                StrSql = StrSql + "(Equipment2DEP.M12 ) as Dept12, "
                StrSql = StrSql + "(Equipment2DEP.M13 ) as Dept13, "
                StrSql = StrSql + "(Equipment2DEP.M14 ) as Dept14, "
                StrSql = StrSql + "(Equipment2DEP.M15 ) as Dept15, "
                StrSql = StrSql + "(Equipment2DEP.M16 ) as Dept16, "
                StrSql = StrSql + "(Equipment2DEP.M17 ) as Dept17, "
                StrSql = StrSql + "(Equipment2DEP.M18 ) as Dept18, "
                StrSql = StrSql + "(Equipment2DEP.M19 ) as Dept19, "
                StrSql = StrSql + "(Equipment2DEP.M20 ) as Dept20, "
                StrSql = StrSql + "(Equipment2DEP.M21 ) as Dept21, "
                StrSql = StrSql + "(Equipment2DEP.M22 ) as Dept22, "
                StrSql = StrSql + "(Equipment2DEP.M23 ) as Dept23, "
                StrSql = StrSql + "(Equipment2DEP.M24 ) as Dept24, "
                StrSql = StrSql + "(Equipment2DEP.M25 ) as Dept25, "
                StrSql = StrSql + "(Equipment2DEP.M26 ) as Dept26, "
                StrSql = StrSql + "(Equipment2DEP.M27 ) as Dept27, "
                StrSql = StrSql + "(Equipment2DEP.M28 ) as Dept28, "
                StrSql = StrSql + "(Equipment2DEP.M29 ) as Dept29, "
                StrSql = StrSql + "(Equipment2DEP.M30 ) as Dept30, "
                StrSql = StrSql + "PREFERENCES.UNITS AS UNIT, "
                StrSql = StrSql + "PREFERENCES.TITLE1, "
                StrSql = StrSql + "PREFERENCES.TITLE2, "
                StrSql = StrSql + "PREFERENCES.TITLE3, "
                StrSql = StrSql + "PREFERENCES.TITLE4 "
                StrSql = StrSql + "From "
                StrSql = StrSql + "Equipment2TYPE "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID=Equipment2TYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "Equipment2COST "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "Equipment2COST.CASEID=Equipment2TYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "Equipment2DEP "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "Equipment2DEP.CASEID=Equipment2TYPE.CASEID "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset1 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset1.Equipid = Equipment2TYPE.M1 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset2 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset2.Equipid = Equipment2TYPE.M2 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset3 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset3.Equipid = Equipment2TYPE.M3 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset4 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset4.Equipid = Equipment2TYPE.M4 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset5 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset5.Equipid = Equipment2TYPE.M5 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset6 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset6.Equipid = Equipment2TYPE.M6 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset7 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset7.Equipid = Equipment2TYPE.M7 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset8 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset8.Equipid = Equipment2TYPE.M8 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset9 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset9.Equipid = Equipment2TYPE.M9 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset10 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset10.Equipid = Equipment2TYPE.M10 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset11 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset11.Equipid = Equipment2TYPE.M11 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset12 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset12.Equipid = Equipment2TYPE.M12 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset13 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset13.Equipid = Equipment2TYPE.M13 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset14 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset14.Equipid = Equipment2TYPE.M14 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset15 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset15.Equipid = Equipment2TYPE.M15 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset16 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset16.Equipid = Equipment2TYPE.M16 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset17 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset17.Equipid = Equipment2TYPE.M17 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset18 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset18.Equipid = Equipment2TYPE.M18 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset19 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset19.Equipid = Equipment2TYPE.M19 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset20 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset20.Equipid = Equipment2TYPE.M20 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset21 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset21.Equipid = Equipment2TYPE.M21 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset22 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset22.Equipid = Equipment2TYPE.M22 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset23 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset23.Equipid = Equipment2TYPE.M23 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset24 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset24.Equipid = Equipment2TYPE.M24 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset25 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset25.Equipid = Equipment2TYPE.M25 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset26 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset26.Equipid = Equipment2TYPE.M26 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset27 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset27.Equipid = Equipment2TYPE.M27 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset28 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset28.Equipid = Equipment2TYPE.M28 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset29 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset29.Equipid = Equipment2TYPE.M29 "
                StrSql = StrSql + "Inner Join "
                StrSql = StrSql + "Equipment2 Asset30 "
                StrSql = StrSql + "On "
                StrSql = StrSql + "Asset30.Equipid = Equipment2TYPE.M30 "
                StrSql = StrSql + "Where "
                StrSql = StrSql + "Equipment2TYPE.CASEID in (" + Cases + ") "
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetOperationSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                'Sql Query
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "EQUIPMENTTYPE.CASEID, "
                StrSql = StrSql + "( CASE WHEN EQUIPMENTTYPE.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES , "
                StrSql = StrSql + "(EQUIDES1.EQUIPDE1||' '||EQUIDES1.EQUIPDE2) AS EQUIPDES1, "
                StrSql = StrSql + "(EQUIDES2.EQUIPDE1||' '||EQUIDES2.EQUIPDE2) AS EQUIPDES2, "
                StrSql = StrSql + "(EQUIDES3.EQUIPDE1||' '||EQUIDES3.EQUIPDE2) AS EQUIPDES3, "
                StrSql = StrSql + "(EQUIDES4.EQUIPDE1||' '||EQUIDES4.EQUIPDE2) AS EQUIPDES4, "
                StrSql = StrSql + "(EQUIDES5.EQUIPDE1||' '||EQUIDES5.EQUIPDE2) AS EQUIPDES5, "
                StrSql = StrSql + "(EQUIDES6.EQUIPDE1||' '||EQUIDES6.EQUIPDE2) AS EQUIPDES6, "
                StrSql = StrSql + "(EQUIDES7.EQUIPDE1||' '||EQUIDES7.EQUIPDE2) AS EQUIPDES7, "
                StrSql = StrSql + "(EQUIDES8.EQUIPDE1||' '||EQUIDES8.EQUIPDE2) AS EQUIPDES8, "
                StrSql = StrSql + "(EQUIDES9.EQUIPDE1||' '||EQUIDES9.EQUIPDE2) AS EQUIPDES9, "
                StrSql = StrSql + "(EQUIDES10.EQUIPDE1||' '||EQUIDES10.EQUIPDE2) AS EQUIPDES10, "
                StrSql = StrSql + "(EQUIDES11.EQUIPDE1||' '||EQUIDES11.EQUIPDE2) AS EQUIPDES11, "
                StrSql = StrSql + "(EQUIDES12.EQUIPDE1||' '||EQUIDES12.EQUIPDE2) AS EQUIPDES12, "
                StrSql = StrSql + "(EQUIDES13.EQUIPDE1||' '||EQUIDES13.EQUIPDE2) AS EQUIPDES13, "
                StrSql = StrSql + "(EQUIDES14.EQUIPDE1||' '||EQUIDES14.EQUIPDE2) AS EQUIPDES14, "
                StrSql = StrSql + "(EQUIDES15.EQUIPDE1||' '||EQUIDES15.EQUIPDE2) AS EQUIPDES15, "
                StrSql = StrSql + "(EQUIDES16.EQUIPDE1||' '||EQUIDES16.EQUIPDE2) AS EQUIPDES16, "
                StrSql = StrSql + "(EQUIDES17.EQUIPDE1||' '||EQUIDES17.EQUIPDE2) AS EQUIPDES17, "
                StrSql = StrSql + "(EQUIDES18.EQUIPDE1||' '||EQUIDES18.EQUIPDE2) AS EQUIPDES18, "
                StrSql = StrSql + "(EQUIDES19.EQUIPDE1||' '||EQUIDES19.EQUIPDE2) AS EQUIPDES19, "
                StrSql = StrSql + "(EQUIDES20.EQUIPDE1||' '||EQUIDES20.EQUIPDE2) AS EQUIPDES20, "
                StrSql = StrSql + "(EQUIDES21.EQUIPDE1||' '||EQUIDES21.EQUIPDE2) AS EQUIPDES21, "
                StrSql = StrSql + "(EQUIDES22.EQUIPDE1||' '||EQUIDES22.EQUIPDE2) AS EQUIPDES22, "
                StrSql = StrSql + "(EQUIDES23.EQUIPDE1||' '||EQUIDES23.EQUIPDE2) AS EQUIPDES23, "
                StrSql = StrSql + "(EQUIDES24.EQUIPDE1||' '||EQUIDES24.EQUIPDE2) AS EQUIPDES24, "
                StrSql = StrSql + "(EQUIDES25.EQUIPDE1||' '||EQUIDES25.EQUIPDE2) AS EQUIPDES25, "
                StrSql = StrSql + "(EQUIDES26.EQUIPDE1||' '||EQUIDES26.EQUIPDE2) AS EQUIPDES26, "
                StrSql = StrSql + "(EQUIDES27.EQUIPDE1||' '||EQUIDES27.EQUIPDE2) AS EQUIPDES27, "
                StrSql = StrSql + "(EQUIDES28.EQUIPDE1||' '||EQUIDES28.EQUIPDE2) AS EQUIPDES28, "
                StrSql = StrSql + "(EQUIDES29.EQUIPDE1||' '||EQUIDES29.EQUIPDE2) AS EQUIPDES29, "
                StrSql = StrSql + "(EQUIDES30.EQUIPDE1||' '||EQUIDES30.EQUIPDE2) AS EQUIPDES30, "
                StrSql = StrSql + "(OPWEBWIDTH.M1 * PREFERENCES.CONVTHICK2) AS WEBWIDTH1, "
                StrSql = StrSql + "(OPWEBWIDTH.M2 * PREFERENCES.CONVTHICK2) AS WEBWIDTH2, "
                StrSql = StrSql + "(OPWEBWIDTH.M3 * PREFERENCES.CONVTHICK2) AS WEBWIDTH3, "
                StrSql = StrSql + "(OPWEBWIDTH.M4 * PREFERENCES.CONVTHICK2) AS WEBWIDTH4, "
                StrSql = StrSql + "(OPWEBWIDTH.M5 * PREFERENCES.CONVTHICK2) AS WEBWIDTH5, "
                StrSql = StrSql + "(OPWEBWIDTH.M6 * PREFERENCES.CONVTHICK2) AS WEBWIDTH6, "
                StrSql = StrSql + "(OPWEBWIDTH.M7 * PREFERENCES.CONVTHICK2) AS WEBWIDTH7, "
                StrSql = StrSql + "(OPWEBWIDTH.M8 * PREFERENCES.CONVTHICK2) AS WEBWIDTH8, "
                StrSql = StrSql + "(OPWEBWIDTH.M9 * PREFERENCES.CONVTHICK2) AS WEBWIDTH9, "
                StrSql = StrSql + "(OPWEBWIDTH.M10 * PREFERENCES.CONVTHICK2) AS WEBWIDTH10, "
                StrSql = StrSql + "(OPWEBWIDTH.M11 * PREFERENCES.CONVTHICK2) AS WEBWIDTH11, "
                StrSql = StrSql + "(OPWEBWIDTH.M12 * PREFERENCES.CONVTHICK2) AS WEBWIDTH12, "
                StrSql = StrSql + "(OPWEBWIDTH.M13 * PREFERENCES.CONVTHICK2) AS WEBWIDTH13, "
                StrSql = StrSql + "(OPWEBWIDTH.M14 * PREFERENCES.CONVTHICK2) AS WEBWIDTH14, "
                StrSql = StrSql + "(OPWEBWIDTH.M15 * PREFERENCES.CONVTHICK2) AS WEBWIDTH15, "
                StrSql = StrSql + "(OPWEBWIDTH.M16 * PREFERENCES.CONVTHICK2) AS WEBWIDTH16, "
                StrSql = StrSql + "(OPWEBWIDTH.M17 * PREFERENCES.CONVTHICK2) AS WEBWIDTH17, "
                StrSql = StrSql + "(OPWEBWIDTH.M18 * PREFERENCES.CONVTHICK2) AS WEBWIDTH18, "
                StrSql = StrSql + "(OPWEBWIDTH.M19 * PREFERENCES.CONVTHICK2) AS WEBWIDTH19, "
                StrSql = StrSql + "(OPWEBWIDTH.M20 * PREFERENCES.CONVTHICK2) AS WEBWIDTH20, "
                StrSql = StrSql + "(OPWEBWIDTH.M21 * PREFERENCES.CONVTHICK2) AS WEBWIDTH21, "
                StrSql = StrSql + "(OPWEBWIDTH.M22 * PREFERENCES.CONVTHICK2) AS WEBWIDTH22, "
                StrSql = StrSql + "(OPWEBWIDTH.M23 * PREFERENCES.CONVTHICK2) AS WEBWIDTH23, "
                StrSql = StrSql + "(OPWEBWIDTH.M24 * PREFERENCES.CONVTHICK2) AS WEBWIDTH24, "
                StrSql = StrSql + "(OPWEBWIDTH.M25 * PREFERENCES.CONVTHICK2) AS WEBWIDTH25, "
                StrSql = StrSql + "(OPWEBWIDTH.M26 * PREFERENCES.CONVTHICK2) AS WEBWIDTH26, "
                StrSql = StrSql + "(OPWEBWIDTH.M27 * PREFERENCES.CONVTHICK2) AS WEBWIDTH27, "
                StrSql = StrSql + "(OPWEBWIDTH.M28 * PREFERENCES.CONVTHICK2) AS WEBWIDTH28, "
                StrSql = StrSql + "(OPWEBWIDTH.M29 * PREFERENCES.CONVTHICK2) AS WEBWIDTH29, "
                StrSql = StrSql + "(OPWEBWIDTH.M30 * PREFERENCES.CONVTHICK2) AS WEBWIDTH30, "
                StrSql = StrSql + "(EQUIDES1.WIDTH) AS EQUIPWIDTH1, "
                StrSql = StrSql + "(EQUIDES2.WIDTH) AS EQUIPWIDTH2, "
                StrSql = StrSql + "(EQUIDES3.WIDTH) AS EQUIPWIDTH3, "
                StrSql = StrSql + "(EQUIDES4.WIDTH) AS EQUIPWIDTH4, "
                StrSql = StrSql + "(EQUIDES5.WIDTH) AS EQUIPWIDTH5, "
                StrSql = StrSql + "(EQUIDES6.WIDTH) AS EQUIPWIDTH6, "
                StrSql = StrSql + "(EQUIDES7.WIDTH) AS EQUIPWIDTH7, "
                StrSql = StrSql + "(EQUIDES8.WIDTH) AS EQUIPWIDTH8, "
                StrSql = StrSql + "(EQUIDES9.WIDTH) AS EQUIPWIDTH9, "
                StrSql = StrSql + "(EQUIDES10.WIDTH) AS EQUIPWIDTH10, "
                StrSql = StrSql + "(EQUIDES11.WIDTH) AS EQUIPWIDTH11, "
                StrSql = StrSql + "(EQUIDES12.WIDTH) AS EQUIPWIDTH12, "
                StrSql = StrSql + "(EQUIDES13.WIDTH) AS EQUIPWIDTH13, "
                StrSql = StrSql + "(EQUIDES14.WIDTH) AS EQUIPWIDTH14, "
                StrSql = StrSql + "(EQUIDES15.WIDTH) AS EQUIPWIDTH15, "
                StrSql = StrSql + "(EQUIDES16.WIDTH) AS EQUIPWIDTH16, "
                StrSql = StrSql + "(EQUIDES17.WIDTH) AS EQUIPWIDTH17, "
                StrSql = StrSql + "(EQUIDES18.WIDTH) AS EQUIPWIDTH18, "
                StrSql = StrSql + "(EQUIDES19.WIDTH) AS EQUIPWIDTH19, "
                StrSql = StrSql + "(EQUIDES20.WIDTH) AS EQUIPWIDTH20, "
                StrSql = StrSql + "(EQUIDES21.WIDTH) AS EQUIPWIDTH21, "
                StrSql = StrSql + "(EQUIDES22.WIDTH) AS EQUIPWIDTH22, "
                StrSql = StrSql + "(EQUIDES23.WIDTH) AS EQUIPWIDTH23, "
                StrSql = StrSql + "(EQUIDES24.WIDTH) AS EQUIPWIDTH24, "
                StrSql = StrSql + "(EQUIDES25.WIDTH) AS EQUIPWIDTH25, "
                StrSql = StrSql + "(EQUIDES26.WIDTH) AS EQUIPWIDTH26, "
                StrSql = StrSql + "(EQUIDES27.WIDTH) AS EQUIPWIDTH27, "
                StrSql = StrSql + "(EQUIDES28.WIDTH) AS EQUIPWIDTH28, "
                StrSql = StrSql + "(EQUIDES29.WIDTH) AS EQUIPWIDTH29, "
                StrSql = StrSql + "(EQUIDES30.WIDTH) AS EQUIPWIDTH30, "
                StrSql = StrSql + "OPMAXRUNHRS.M1 AS ANNUALRUNHOURS1, "
                StrSql = StrSql + "OPMAXRUNHRS.M2 AS ANNUALRUNHOURS2, "
                StrSql = StrSql + "OPMAXRUNHRS.M3 AS ANNUALRUNHOURS3, "
                StrSql = StrSql + "OPMAXRUNHRS.M4 AS ANNUALRUNHOURS4, "
                StrSql = StrSql + "OPMAXRUNHRS.M5 AS ANNUALRUNHOURS5, "
                StrSql = StrSql + "OPMAXRUNHRS.M6 AS ANNUALRUNHOURS6, "
                StrSql = StrSql + "OPMAXRUNHRS.M7 AS ANNUALRUNHOURS7, "
                StrSql = StrSql + "OPMAXRUNHRS.M8 AS ANNUALRUNHOURS8, "
                StrSql = StrSql + "OPMAXRUNHRS.M9 AS ANNUALRUNHOURS9, "
                StrSql = StrSql + "OPMAXRUNHRS.M10 AS ANNUALRUNHOURS10, "
                StrSql = StrSql + "OPMAXRUNHRS.M11 AS ANNUALRUNHOURS11, "
                StrSql = StrSql + "OPMAXRUNHRS.M12 AS ANNUALRUNHOURS12, "
                StrSql = StrSql + "OPMAXRUNHRS.M13 AS ANNUALRUNHOURS13, "
                StrSql = StrSql + "OPMAXRUNHRS.M14 AS ANNUALRUNHOURS14, "
                StrSql = StrSql + "OPMAXRUNHRS.M15 AS ANNUALRUNHOURS15, "
                StrSql = StrSql + "OPMAXRUNHRS.M16 AS ANNUALRUNHOURS16, "
                StrSql = StrSql + "OPMAXRUNHRS.M17 AS ANNUALRUNHOURS17, "
                StrSql = StrSql + "OPMAXRUNHRS.M18 AS ANNUALRUNHOURS18, "
                StrSql = StrSql + "OPMAXRUNHRS.M19 AS ANNUALRUNHOURS19, "
                StrSql = StrSql + "OPMAXRUNHRS.M20 AS ANNUALRUNHOURS20, "
                StrSql = StrSql + "OPMAXRUNHRS.M21 AS ANNUALRUNHOURS21, "
                StrSql = StrSql + "OPMAXRUNHRS.M22 AS ANNUALRUNHOURS22, "
                StrSql = StrSql + "OPMAXRUNHRS.M23 AS ANNUALRUNHOURS23, "
                StrSql = StrSql + "OPMAXRUNHRS.M24 AS ANNUALRUNHOURS24, "
                StrSql = StrSql + "OPMAXRUNHRS.M25 AS ANNUALRUNHOURS25, "
                StrSql = StrSql + "OPMAXRUNHRS.M26 AS ANNUALRUNHOURS26, "
                StrSql = StrSql + "OPMAXRUNHRS.M27 AS ANNUALRUNHOURS27, "
                StrSql = StrSql + "OPMAXRUNHRS.M28 AS ANNUALRUNHOURS28, "
                StrSql = StrSql + "OPMAXRUNHRS.M29 AS ANNUALRUNHOURS29, "
                StrSql = StrSql + "OPMAXRUNHRS.M30 AS ANNUALRUNHOURS30, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M1 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE1, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M2 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE2, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M3 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE3, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M4 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE4, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M5 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE5, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M6 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE6, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M7 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE7, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M8 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE8, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M9 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE9, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M10 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE10, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M11 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE11, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M12 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE12, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M13 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE13, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M14 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE14, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M15 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE15, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M16 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE16, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M17 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE17, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M18 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE18, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M19 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE19, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M20 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE20, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M21 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE21, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M22 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE22, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M23 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE23, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M24 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE24, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M25 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE25, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M26 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE26, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M27 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE27, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M28 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE28, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M29 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE29, "
                'StrSql = StrSql + "ROUND((OPINSTGRSRATE.M30 * PREFERENCES.CONVWT),2) AS INSTANTANEOUSRATE30, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES1.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M1 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M1,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE1, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES2.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M2 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M2,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE2, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES3.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M3 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M3,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE3, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES4.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M4 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M4,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE4, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES5.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M5 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M5,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE5, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES6.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M6 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M6,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE6, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES7.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M7 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M7,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE7, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES8.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M8 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M8,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE8, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES9.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M9 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M9,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE9, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES10.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M10 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M10,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE10, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES11.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M11 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M11,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE11, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES12.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M12 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M12,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE12, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES13.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M13 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M13,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE13, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES14.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M14 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M14,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE14, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES15.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M15 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M15,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE15, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES16.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M16 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M16,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE16, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES17.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M17 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M17,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE17, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES18.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M18 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M18,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE18, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES19.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M19 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M19,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE19, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES20.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M20 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M20,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE20, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES21.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M21 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M21,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE21, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES22.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M22 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M22,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE22, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES23.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M23 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M23,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE23, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES24.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M24 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M24,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE24, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES25.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M25 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M25,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE25, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES26.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M26 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M26,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE26, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES27.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M27 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M27,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE27, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES28.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M28 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M28,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE28, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES29.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M29 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M29,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE29, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When EQUIDES30.UNITS ='fpm' then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((OPINSTGRSRATE.M30 * PREFERENCES.CONVTHICK2),2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND(OPINSTGRSRATE.M30,2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "AS INSTANTANEOUSRATE30, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES1.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES1.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS1, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES2.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES2.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS2, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES3.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES3.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS3, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES4.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES4.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS4, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES5.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES5.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS5, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES6.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES6.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS6, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES7.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES7.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS7, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES8.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES8.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS8, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES9.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES9.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS9, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES10.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES10.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS10, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES11.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES11.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS11, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES12.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES12.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS12, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES13.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES13.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS13, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES14.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES14.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS14, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES15.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES15.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS15, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES16.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES16.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS16, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES17.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES17.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS17, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES18.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES18.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS18, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES19.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES19.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS19, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES20.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES20.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS20, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES21.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES21.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS21, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES22.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES22.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS22, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES23.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES23.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS23, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES24.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES24.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS24, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES25.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES25.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS25, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES26.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES26.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS26, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES27.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES27.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS27, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES28.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES28.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS28, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES29.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES29.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS29, "
                StrSql = StrSql + "Case "
                StrSql = StrSql + "When PREFERENCES.UNITS =0 then "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES30.UNITS) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "Else "
                StrSql = StrSql + "( "
                StrSql = StrSql + "(EQUIDES30.UNITS2) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "End "
                StrSql = StrSql + "As EQUIPUNITS30, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M1 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE1, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M2 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE2, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M3 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE3, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M4 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE4, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M5 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE5, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M6 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE6, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M7 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE7, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M8 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE8, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M9 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE9, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M10 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE10, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M11 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE11, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M12 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE12, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M13 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE13, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M14 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE14, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M15 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE15, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M16 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE16, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M17 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE17, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M18 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE18, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M19 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE19, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M20 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE20, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M21 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE21, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M22 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE22, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M23 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE23, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M24 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE24, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M25 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE25, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M26 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE26, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M27 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE27, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M28 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE28, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M29 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE29, "
                StrSql = StrSql + "ROUND((OPLBSPERHOUR.M30 * PREFERENCES.CONVWT),2) AS INSTANTANEOUS2RATE30, "
                StrSql = StrSql + "OPDOWNTIME.M1 AS DOWNTIME1, "
                StrSql = StrSql + "OPDOWNTIME.M2 AS DOWNTIME2, "
                StrSql = StrSql + "OPDOWNTIME.M3 AS DOWNTIME3, "
                StrSql = StrSql + "OPDOWNTIME.M4 AS DOWNTIME4, "
                StrSql = StrSql + "OPDOWNTIME.M5 AS DOWNTIME5, "
                StrSql = StrSql + "OPDOWNTIME.M6 AS DOWNTIME6, "
                StrSql = StrSql + "OPDOWNTIME.M7 AS DOWNTIME7, "
                StrSql = StrSql + "OPDOWNTIME.M8 AS DOWNTIME8, "
                StrSql = StrSql + "OPDOWNTIME.M9 AS DOWNTIME9, "
                StrSql = StrSql + "OPDOWNTIME.M10 AS DOWNTIME10, "
                StrSql = StrSql + "OPDOWNTIME.M11 AS DOWNTIME11, "
                StrSql = StrSql + "OPDOWNTIME.M12 AS DOWNTIME12, "
                StrSql = StrSql + "OPDOWNTIME.M13 AS DOWNTIME13, "
                StrSql = StrSql + "OPDOWNTIME.M14 AS DOWNTIME14, "
                StrSql = StrSql + "OPDOWNTIME.M15 AS DOWNTIME15, "
                StrSql = StrSql + "OPDOWNTIME.M16 AS DOWNTIME16, "
                StrSql = StrSql + "OPDOWNTIME.M17 AS DOWNTIME17, "
                StrSql = StrSql + "OPDOWNTIME.M18 AS DOWNTIME18, "
                StrSql = StrSql + "OPDOWNTIME.M19 AS DOWNTIME19, "
                StrSql = StrSql + "OPDOWNTIME.M20 AS DOWNTIME20, "
                StrSql = StrSql + "OPDOWNTIME.M21 AS DOWNTIME21, "
                StrSql = StrSql + "OPDOWNTIME.M22 AS DOWNTIME22, "
                StrSql = StrSql + "OPDOWNTIME.M23 AS DOWNTIME23, "
                StrSql = StrSql + "OPDOWNTIME.M24 AS DOWNTIME24, "
                StrSql = StrSql + "OPDOWNTIME.M25 AS DOWNTIME25, "
                StrSql = StrSql + "OPDOWNTIME.M26 AS DOWNTIME26, "
                StrSql = StrSql + "OPDOWNTIME.M27 AS DOWNTIME27, "
                StrSql = StrSql + "OPDOWNTIME.M28 AS DOWNTIME28, "
                StrSql = StrSql + "OPDOWNTIME.M29 AS DOWNTIME29, "
                StrSql = StrSql + "OPDOWNTIME.M30 AS DOWNTIME30, "
                StrSql = StrSql + "OPWASTE.M1 AS PRODUCTIONWAST1, "
                StrSql = StrSql + "OPWASTE.M2 AS PRODUCTIONWAST2, "
                StrSql = StrSql + "OPWASTE.M3 AS PRODUCTIONWAST3, "
                StrSql = StrSql + "OPWASTE.M4 AS PRODUCTIONWAST4, "
                StrSql = StrSql + "OPWASTE.M5 AS PRODUCTIONWAST5, "
                StrSql = StrSql + "OPWASTE.M6 AS PRODUCTIONWAST6, "
                StrSql = StrSql + "OPWASTE.M7 AS PRODUCTIONWAST7, "
                StrSql = StrSql + "OPWASTE.M8 AS PRODUCTIONWAST8, "
                StrSql = StrSql + "OPWASTE.M9 AS PRODUCTIONWAST9, "
                StrSql = StrSql + "OPWASTE.M10 AS PRODUCTIONWAST10, "
                StrSql = StrSql + "OPWASTE.M11 AS PRODUCTIONWAST11, "
                StrSql = StrSql + "OPWASTE.M12 AS PRODUCTIONWAST12, "
                StrSql = StrSql + "OPWASTE.M13 AS PRODUCTIONWAST13, "
                StrSql = StrSql + "OPWASTE.M14 AS PRODUCTIONWAST14, "
                StrSql = StrSql + "OPWASTE.M15 AS PRODUCTIONWAST15, "
                StrSql = StrSql + "OPWASTE.M16 AS PRODUCTIONWAST16, "
                StrSql = StrSql + "OPWASTE.M17 AS PRODUCTIONWAST17, "
                StrSql = StrSql + "OPWASTE.M18 AS PRODUCTIONWAST18, "
                StrSql = StrSql + "OPWASTE.M19 AS PRODUCTIONWAST19, "
                StrSql = StrSql + "OPWASTE.M20 AS PRODUCTIONWAST20, "
                StrSql = StrSql + "OPWASTE.M21 AS PRODUCTIONWAST21, "
                StrSql = StrSql + "OPWASTE.M22 AS PRODUCTIONWAST22, "
                StrSql = StrSql + "OPWASTE.M23 AS PRODUCTIONWAST23, "
                StrSql = StrSql + "OPWASTE.M24 AS PRODUCTIONWAST24, "
                StrSql = StrSql + "OPWASTE.M25 AS PRODUCTIONWAST25, "
                StrSql = StrSql + "OPWASTE.M26 AS PRODUCTIONWAST26, "
                StrSql = StrSql + "OPWASTE.M27 AS PRODUCTIONWAST27, "
                StrSql = StrSql + "OPWASTE.M28 AS PRODUCTIONWAST28, "
                StrSql = StrSql + "OPWASTE.M29 AS PRODUCTIONWAST29, "
                StrSql = StrSql + "OPWASTE.M30 AS PRODUCTIONWAST30, "
                StrSql = StrSql + "OPWASTE.W1 AS DESIGNWAST1, "
                StrSql = StrSql + "OPWASTE.W2 AS DESIGNWAST2, "
                StrSql = StrSql + "OPWASTE.W3 AS DESIGNWAST3, "
                StrSql = StrSql + "OPWASTE.W4 AS DESIGNWAST4, "
                StrSql = StrSql + "OPWASTE.W5 AS DESIGNWAST5, "
                StrSql = StrSql + "OPWASTE.W6 AS DESIGNWAST6, "
                StrSql = StrSql + "OPWASTE.W7 AS DESIGNWAST7, "
                StrSql = StrSql + "OPWASTE.W8 AS DESIGNWAST8, "
                StrSql = StrSql + "OPWASTE.W9 AS DESIGNWAST9, "
                StrSql = StrSql + "OPWASTE.W10 AS DESIGNWAST10, "
                StrSql = StrSql + "OPWASTE.W11 AS DESIGNWAST11, "
                StrSql = StrSql + "OPWASTE.W12 AS DESIGNWAST12, "
                StrSql = StrSql + "OPWASTE.W13 AS DESIGNWAST13, "
                StrSql = StrSql + "OPWASTE.W14 AS DESIGNWAST14, "
                StrSql = StrSql + "OPWASTE.W15 AS DESIGNWAST15, "
                StrSql = StrSql + "OPWASTE.W16 AS DESIGNWAST16, "
                StrSql = StrSql + "OPWASTE.W17 AS DESIGNWAST17, "
                StrSql = StrSql + "OPWASTE.W18 AS DESIGNWAST18, "
                StrSql = StrSql + "OPWASTE.W19 AS DESIGNWAST19, "
                StrSql = StrSql + "OPWASTE.W20 AS DESIGNWAST20, "
                StrSql = StrSql + "OPWASTE.W21 AS DESIGNWAST21, "
                StrSql = StrSql + "OPWASTE.W22 AS DESIGNWAST22, "
                StrSql = StrSql + "OPWASTE.W23 AS DESIGNWAST23, "
                StrSql = StrSql + "OPWASTE.W24 AS DESIGNWAST24, "
                StrSql = StrSql + "OPWASTE.W25 AS DESIGNWAST25, "
                StrSql = StrSql + "OPWASTE.W26 AS DESIGNWAST26, "
                StrSql = StrSql + "OPWASTE.W27 AS DESIGNWAST27, "
                StrSql = StrSql + "OPWASTE.W28 AS DESIGNWAST28, "
                StrSql = StrSql + "OPWASTE.W29 AS DESIGNWAST29, "
                StrSql = StrSql + "OPWASTE.W30 AS DESIGNWAST30, "
                StrSql = StrSql + "PREFERENCES.UNITS, "
                StrSql = StrSql + "PREFERENCES.TITLE5, "
                StrSql = StrSql + "PREFERENCES.TITLE9 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "EQUIPMENTTYPE "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES1.EQUIPID = EQUIPMENTTYPE.M1 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES2.EQUIPID = EQUIPMENTTYPE.M2 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES3.EQUIPID = EQUIPMENTTYPE.M3 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES4.EQUIPID = EQUIPMENTTYPE.M4 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES5.EQUIPID = EQUIPMENTTYPE.M5 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES6.EQUIPID = EQUIPMENTTYPE.M6 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES7.EQUIPID = EQUIPMENTTYPE.M7 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES8.EQUIPID = EQUIPMENTTYPE.M8 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES9.EQUIPID = EQUIPMENTTYPE.M9 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES10.EQUIPID = EQUIPMENTTYPE.M10 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES11 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES11.EQUIPID = EQUIPMENTTYPE.M11 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES12 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES12.EQUIPID = EQUIPMENTTYPE.M12 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES13 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES13.EQUIPID = EQUIPMENTTYPE.M13 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES14 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES14.EQUIPID = EQUIPMENTTYPE.M14 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES15 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES15.EQUIPID = EQUIPMENTTYPE.M15 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES16 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES16.EQUIPID = EQUIPMENTTYPE.M16 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES17 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES17.EQUIPID = EQUIPMENTTYPE.M17 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES18 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES18.EQUIPID = EQUIPMENTTYPE.M18 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES19 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES19.EQUIPID = EQUIPMENTTYPE.M19 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES20 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES20.EQUIPID = EQUIPMENTTYPE.M20 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES21 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES21.EQUIPID = EQUIPMENTTYPE.M21 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES22 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES22.EQUIPID = EQUIPMENTTYPE.M22 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES23 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES23.EQUIPID = EQUIPMENTTYPE.M23 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES24 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES24.EQUIPID = EQUIPMENTTYPE.M24 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES25 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES25.EQUIPID = EQUIPMENTTYPE.M25 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES26 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES26.EQUIPID = EQUIPMENTTYPE.M26 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES27 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES27.EQUIPID = EQUIPMENTTYPE.M27 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES28 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES28.EQUIPID = EQUIPMENTTYPE.M28 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES29 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES29.EQUIPID = EQUIPMENTTYPE.M29 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "EQUIPMENT EQUIDES30 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "EQUIDES30.EQUIPID = EQUIPMENTTYPE.M30 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPWEBWIDTH "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPWEBWIDTH.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPLBSPERHOUR "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPLBSPERHOUR.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPMAXRUNHRS "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPMAXRUNHRS.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPINSTGRSRATE "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPINSTGRSRATE.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPDOWNTIME "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPDOWNTIME.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "OPWASTE "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "OPWASTE.CASEID=EQUIPMENTTYPE.CASEID "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "EQUIPMENTTYPE.CASEID IN (" + Cases + ") "

                'Getting the Values From Databse in Datatble
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPersonnelSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                'Sql Query
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "PERSONNELPOS.CASEID, "
                StrSql = StrSql + "( CASE WHEN PERSONNELPOS.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES , "
                StrSql = StrSql + "PERSONALALL1.PERSID AS ID1, "
                StrSql = StrSql + "PERSONALALL2.PERSID AS ID2, "
                StrSql = StrSql + "PERSONALALL3.PERSID AS ID3, "
                StrSql = StrSql + "PERSONALALL4.PERSID AS ID4, "
                StrSql = StrSql + "PERSONALALL5.PERSID AS ID5, "
                StrSql = StrSql + "PERSONALALL6.PERSID AS ID6, "
                StrSql = StrSql + "PERSONALALL7.PERSID AS ID7, "
                StrSql = StrSql + "PERSONALALL8.PERSID AS ID8, "
                StrSql = StrSql + "PERSONALALL9.PERSID AS ID9, "
                StrSql = StrSql + "PERSONALALL10.PERSID AS ID10, "
                StrSql = StrSql + "PERSONALALL11.PERSID AS ID11, "
                StrSql = StrSql + "PERSONALALL12.PERSID AS ID12, "
                StrSql = StrSql + "PERSONALALL13.PERSID AS ID13, "
                StrSql = StrSql + "PERSONALALL14.PERSID AS ID14, "
                StrSql = StrSql + "PERSONALALL15.PERSID AS ID15, "
                StrSql = StrSql + "PERSONALALL16.PERSID AS ID16, "
                StrSql = StrSql + "PERSONALALL17.PERSID AS ID17, "
                StrSql = StrSql + "PERSONALALL18.PERSID AS ID18, "
                StrSql = StrSql + "PERSONALALL19.PERSID AS ID19, "
                StrSql = StrSql + "PERSONALALL20.PERSID AS ID20, "
                StrSql = StrSql + "PERSONALALL21.PERSID AS ID21, "
                StrSql = StrSql + "PERSONALALL22.PERSID AS ID22, "
                StrSql = StrSql + "PERSONALALL23.PERSID AS ID23, "
                StrSql = StrSql + "PERSONALALL24.PERSID AS ID24, "
                StrSql = StrSql + "PERSONALALL25.PERSID AS ID25, "
                StrSql = StrSql + "PERSONALALL26.PERSID AS ID26, "
                StrSql = StrSql + "PERSONALALL27.PERSID AS ID27, "
                StrSql = StrSql + "PERSONALALL28.PERSID AS ID28, "
                StrSql = StrSql + "PERSONALALL29.PERSID AS ID29, "
                StrSql = StrSql + "PERSONALALL30.PERSID AS ID30, "
                StrSql = StrSql + "PERSONNELNUM.M1  AS NUMBER1, "
                StrSql = StrSql + "PERSONNELNUM.M2  AS NUMBER2, "
                StrSql = StrSql + "PERSONNELNUM.M3  AS NUMBER3, "
                StrSql = StrSql + "PERSONNELNUM.M4  AS NUMBER4, "
                StrSql = StrSql + "PERSONNELNUM.M5  AS NUMBER5, "
                StrSql = StrSql + "PERSONNELNUM.M6  AS NUMBER6, "
                StrSql = StrSql + "PERSONNELNUM.M7  AS NUMBER7, "
                StrSql = StrSql + "PERSONNELNUM.M8  AS NUMBER8, "
                StrSql = StrSql + "PERSONNELNUM.M9  AS NUMBER9, "
                StrSql = StrSql + "PERSONNELNUM.M10  AS NUMBER10, "
                StrSql = StrSql + "PERSONNELNUM.M11  AS NUMBER11, "
                StrSql = StrSql + "PERSONNELNUM.M12  AS NUMBER12, "
                StrSql = StrSql + "PERSONNELNUM.M13  AS NUMBER13, "
                StrSql = StrSql + "PERSONNELNUM.M14  AS NUMBER14, "
                StrSql = StrSql + "PERSONNELNUM.M15  AS NUMBER15, "
                StrSql = StrSql + "PERSONNELNUM.M16  AS NUMBER16, "
                StrSql = StrSql + "PERSONNELNUM.M17  AS NUMBER17, "
                StrSql = StrSql + "PERSONNELNUM.M18  AS NUMBER18, "
                StrSql = StrSql + "PERSONNELNUM.M19  AS NUMBER19, "
                StrSql = StrSql + "PERSONNELNUM.M20  AS NUMBER20, "
                StrSql = StrSql + "PERSONNELNUM.M21  AS NUMBER21, "
                StrSql = StrSql + "PERSONNELNUM.M22  AS NUMBER22, "
                StrSql = StrSql + "PERSONNELNUM.M23  AS NUMBER23, "
                StrSql = StrSql + "PERSONNELNUM.M24  AS NUMBER24, "
                StrSql = StrSql + "PERSONNELNUM.M25  AS NUMBER25, "
                StrSql = StrSql + "PERSONNELNUM.M26  AS NUMBER26, "
                StrSql = StrSql + "PERSONNELNUM.M27  AS NUMBER27, "
                StrSql = StrSql + "PERSONNELNUM.M28  AS NUMBER28, "
                StrSql = StrSql + "PERSONNELNUM.M29  AS NUMBER29, "
                StrSql = StrSql + "PERSONNELNUM.M30  AS NUMBER30, "
                StrSql = StrSql + "(PERSONALALL1.SALARY * PREFERENCES.CURR)  AS SUGSALARY1, "
                StrSql = StrSql + "(PERSONALALL2.SALARY * PREFERENCES.CURR)  AS SUGSALARY2, "
                StrSql = StrSql + "(PERSONALALL3.SALARY * PREFERENCES.CURR)  AS SUGSALARY3, "
                StrSql = StrSql + "(PERSONALALL4.SALARY * PREFERENCES.CURR)  AS SUGSALARY4, "
                StrSql = StrSql + "(PERSONALALL5.SALARY * PREFERENCES.CURR)  AS SUGSALARY5, "
                StrSql = StrSql + "(PERSONALALL6.SALARY * PREFERENCES.CURR)  AS SUGSALARY6, "
                StrSql = StrSql + "(PERSONALALL7.SALARY * PREFERENCES.CURR)  AS SUGSALARY7, "
                StrSql = StrSql + "(PERSONALALL8.SALARY * PREFERENCES.CURR)  AS SUGSALARY8, "
                StrSql = StrSql + "(PERSONALALL9.SALARY * PREFERENCES.CURR)  AS SUGSALARY9, "
                StrSql = StrSql + "(PERSONALALL10.SALARY * PREFERENCES.CURR)  AS SUGSALARY10, "
                StrSql = StrSql + "(PERSONALALL11.SALARY * PREFERENCES.CURR)  AS SUGSALARY11, "
                StrSql = StrSql + "(PERSONALALL12.SALARY * PREFERENCES.CURR)  AS SUGSALARY12, "
                StrSql = StrSql + "(PERSONALALL13.SALARY * PREFERENCES.CURR)  AS SUGSALARY13, "
                StrSql = StrSql + "(PERSONALALL14.SALARY * PREFERENCES.CURR)  AS SUGSALARY14, "
                StrSql = StrSql + "(PERSONALALL15.SALARY * PREFERENCES.CURR)  AS SUGSALARY15, "
                StrSql = StrSql + "(PERSONALALL16.SALARY * PREFERENCES.CURR)  AS SUGSALARY16, "
                StrSql = StrSql + "(PERSONALALL17.SALARY * PREFERENCES.CURR)  AS SUGSALARY17, "
                StrSql = StrSql + "(PERSONALALL18.SALARY * PREFERENCES.CURR)  AS SUGSALARY18, "
                StrSql = StrSql + "(PERSONALALL19.SALARY * PREFERENCES.CURR)  AS SUGSALARY19, "
                StrSql = StrSql + "(PERSONALALL20.SALARY * PREFERENCES.CURR)  AS SUGSALARY20, "
                StrSql = StrSql + "(PERSONALALL21.SALARY * PREFERENCES.CURR)  AS SUGSALARY21, "
                StrSql = StrSql + "(PERSONALALL22.SALARY * PREFERENCES.CURR)  AS SUGSALARY22, "
                StrSql = StrSql + "(PERSONALALL23.SALARY * PREFERENCES.CURR)  AS SUGSALARY23, "
                StrSql = StrSql + "(PERSONALALL24.SALARY * PREFERENCES.CURR)  AS SUGSALARY24, "
                StrSql = StrSql + "(PERSONALALL25.SALARY * PREFERENCES.CURR)  AS SUGSALARY25, "
                StrSql = StrSql + "(PERSONALALL26.SALARY * PREFERENCES.CURR)  AS SUGSALARY26, "
                StrSql = StrSql + "(PERSONALALL27.SALARY * PREFERENCES.CURR)  AS SUGSALARY27, "
                StrSql = StrSql + "(PERSONALALL28.SALARY * PREFERENCES.CURR)  AS SUGSALARY28, "
                StrSql = StrSql + "(PERSONALALL29.SALARY * PREFERENCES.CURR)  AS SUGSALARY29, "
                StrSql = StrSql + "(PERSONALALL30.SALARY * PREFERENCES.CURR)  AS SUGSALARY30, "
                StrSql = StrSql + "(PERSONNELSAL.M1 * PREFERENCES.CURR)  AS PREFSALARY1, "
                StrSql = StrSql + "(PERSONNELSAL.M2 * PREFERENCES.CURR)  AS PREFSALARY2, "
                StrSql = StrSql + "(PERSONNELSAL.M3 * PREFERENCES.CURR)  AS PREFSALARY3, "
                StrSql = StrSql + "(PERSONNELSAL.M4 * PREFERENCES.CURR)  AS PREFSALARY4, "
                StrSql = StrSql + "(PERSONNELSAL.M5 * PREFERENCES.CURR)  AS PREFSALARY5, "
                StrSql = StrSql + "(PERSONNELSAL.M6 * PREFERENCES.CURR)  AS PREFSALARY6, "
                StrSql = StrSql + "(PERSONNELSAL.M7 * PREFERENCES.CURR)  AS PREFSALARY7, "
                StrSql = StrSql + "(PERSONNELSAL.M8 * PREFERENCES.CURR)  AS PREFSALARY8, "
                StrSql = StrSql + "(PERSONNELSAL.M9 * PREFERENCES.CURR)  AS PREFSALARY9, "
                StrSql = StrSql + "(PERSONNELSAL.M10 * PREFERENCES.CURR)  AS PREFSALARY10, "
                StrSql = StrSql + "(PERSONNELSAL.M11 * PREFERENCES.CURR)  AS PREFSALARY11, "
                StrSql = StrSql + "(PERSONNELSAL.M12 * PREFERENCES.CURR)  AS PREFSALARY12, "
                StrSql = StrSql + "(PERSONNELSAL.M13 * PREFERENCES.CURR)  AS PREFSALARY13, "
                StrSql = StrSql + "(PERSONNELSAL.M14 * PREFERENCES.CURR)  AS PREFSALARY14, "
                StrSql = StrSql + "(PERSONNELSAL.M15 * PREFERENCES.CURR)  AS PREFSALARY15, "
                StrSql = StrSql + "(PERSONNELSAL.M16 * PREFERENCES.CURR)  AS PREFSALARY16, "
                StrSql = StrSql + "(PERSONNELSAL.M17 * PREFERENCES.CURR)  AS PREFSALARY17, "
                StrSql = StrSql + "(PERSONNELSAL.M18 * PREFERENCES.CURR)  AS PREFSALARY18, "
                StrSql = StrSql + "(PERSONNELSAL.M19 * PREFERENCES.CURR)  AS PREFSALARY19, "
                StrSql = StrSql + "(PERSONNELSAL.M20 * PREFERENCES.CURR)  AS PREFSALARY20, "
                StrSql = StrSql + "(PERSONNELSAL.M21 * PREFERENCES.CURR)  AS PREFSALARY21, "
                StrSql = StrSql + "(PERSONNELSAL.M22 * PREFERENCES.CURR)  AS PREFSALARY22, "
                StrSql = StrSql + "(PERSONNELSAL.M23 * PREFERENCES.CURR)  AS PREFSALARY23, "
                StrSql = StrSql + "(PERSONNELSAL.M24 * PREFERENCES.CURR)  AS PREFSALARY24, "
                StrSql = StrSql + "(PERSONNELSAL.M25 * PREFERENCES.CURR)  AS PREFSALARY25, "
                StrSql = StrSql + "(PERSONNELSAL.M26 * PREFERENCES.CURR)  AS PREFSALARY26, "
                StrSql = StrSql + "(PERSONNELSAL.M27 * PREFERENCES.CURR)  AS PREFSALARY27, "
                StrSql = StrSql + "(PERSONNELSAL.M28 * PREFERENCES.CURR)  AS PREFSALARY28, "
                StrSql = StrSql + "(PERSONNELSAL.M29 * PREFERENCES.CURR)  AS PREFSALARY29, "
                StrSql = StrSql + "(PERSONNELSAL.M30 * PREFERENCES.CURR)  AS PREFSALARY30, "
                StrSql = StrSql + "PERSONNELVP.M1  AS COSTTYPE1, "
                StrSql = StrSql + "PERSONNELVP.M2  AS COSTTYPE2, "
                StrSql = StrSql + "PERSONNELVP.M3  AS COSTTYPE3, "
                StrSql = StrSql + "PERSONNELVP.M4  AS COSTTYPE4, "
                StrSql = StrSql + "PERSONNELVP.M5  AS COSTTYPE5, "
                StrSql = StrSql + "PERSONNELVP.M6  AS COSTTYPE6, "
                StrSql = StrSql + "PERSONNELVP.M7  AS COSTTYPE7, "
                StrSql = StrSql + "PERSONNELVP.M8  AS COSTTYPE8, "
                StrSql = StrSql + "PERSONNELVP.M9  AS COSTTYPE9, "
                StrSql = StrSql + "PERSONNELVP.M10  AS COSTTYPE10, "
                StrSql = StrSql + "PERSONNELVP.M11  AS COSTTYPE11, "
                StrSql = StrSql + "PERSONNELVP.M12  AS COSTTYPE12, "
                StrSql = StrSql + "PERSONNELVP.M13  AS COSTTYPE13, "
                StrSql = StrSql + "PERSONNELVP.M14  AS COSTTYPE14, "
                StrSql = StrSql + "PERSONNELVP.M15  AS COSTTYPE15, "
                StrSql = StrSql + "PERSONNELVP.M16  AS COSTTYPE16, "
                StrSql = StrSql + "PERSONNELVP.M17  AS COSTTYPE17, "
                StrSql = StrSql + "PERSONNELVP.M18  AS COSTTYPE18, "
                StrSql = StrSql + "PERSONNELVP.M19  AS COSTTYPE19, "
                StrSql = StrSql + "PERSONNELVP.M20  AS COSTTYPE20, "
                StrSql = StrSql + "PERSONNELVP.M21  AS COSTTYPE21, "
                StrSql = StrSql + "PERSONNELVP.M22  AS COSTTYPE22, "
                StrSql = StrSql + "PERSONNELVP.M23  AS COSTTYPE23, "
                StrSql = StrSql + "PERSONNELVP.M24  AS COSTTYPE24, "
                StrSql = StrSql + "PERSONNELVP.M25  AS COSTTYPE25, "
                StrSql = StrSql + "PERSONNELVP.M26  AS COSTTYPE26, "
                StrSql = StrSql + "PERSONNELVP.M27  AS COSTTYPE27, "
                StrSql = StrSql + "PERSONNELVP.M28  AS COSTTYPE28, "
                StrSql = StrSql + "PERSONNELVP.M29  AS COSTTYPE29, "
                StrSql = StrSql + "PERSONNELVP.M30  AS COSTTYPE30, "
                StrSql = StrSql + "PERSONNELDEP.M1  AS DEPARTMENT1, "
                StrSql = StrSql + "PERSONNELDEP.M2  AS DEPARTMENT2, "
                StrSql = StrSql + "PERSONNELDEP.M3  AS DEPARTMENT3, "
                StrSql = StrSql + "PERSONNELDEP.M4  AS DEPARTMENT4, "
                StrSql = StrSql + "PERSONNELDEP.M5  AS DEPARTMENT5, "
                StrSql = StrSql + "PERSONNELDEP.M6  AS DEPARTMENT6, "
                StrSql = StrSql + "PERSONNELDEP.M7  AS DEPARTMENT7, "
                StrSql = StrSql + "PERSONNELDEP.M8  AS DEPARTMENT8, "
                StrSql = StrSql + "PERSONNELDEP.M9  AS DEPARTMENT9, "
                StrSql = StrSql + "PERSONNELDEP.M10  AS DEPARTMENT10, "
                StrSql = StrSql + "PERSONNELDEP.M11  AS DEPARTMENT11, "
                StrSql = StrSql + "PERSONNELDEP.M12  AS DEPARTMENT12, "
                StrSql = StrSql + "PERSONNELDEP.M13  AS DEPARTMENT13, "
                StrSql = StrSql + "PERSONNELDEP.M14  AS DEPARTMENT14, "
                StrSql = StrSql + "PERSONNELDEP.M15  AS DEPARTMENT15, "
                StrSql = StrSql + "PERSONNELDEP.M16  AS DEPARTMENT16, "
                StrSql = StrSql + "PERSONNELDEP.M17  AS DEPARTMENT17, "
                StrSql = StrSql + "PERSONNELDEP.M18  AS DEPARTMENT18, "
                StrSql = StrSql + "PERSONNELDEP.M19  AS DEPARTMENT19, "
                StrSql = StrSql + "PERSONNELDEP.M20  AS DEPARTMENT20, "
                StrSql = StrSql + "PERSONNELDEP.M21  AS DEPARTMENT21, "
                StrSql = StrSql + "PERSONNELDEP.M22  AS DEPARTMENT22, "
                StrSql = StrSql + "PERSONNELDEP.M23  AS DEPARTMENT23, "
                StrSql = StrSql + "PERSONNELDEP.M24  AS DEPARTMENT24, "
                StrSql = StrSql + "PERSONNELDEP.M25  AS DEPARTMENT25, "
                StrSql = StrSql + "PERSONNELDEP.M26  AS DEPARTMENT26, "
                StrSql = StrSql + "PERSONNELDEP.M27  AS DEPARTMENT27, "
                StrSql = StrSql + "PERSONNELDEP.M28  AS DEPARTMENT28, "
                StrSql = StrSql + "PERSONNELDEP.M29  AS DEPARTMENT29, "
                StrSql = StrSql + "PERSONNELDEP.M30  AS DEPARTMENT30, "
                StrSql = StrSql + " PREFERENCES.OCOUNTRY, "
                StrSql = StrSql + "PREFERENCES.TITLE4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "PERSONNELPOS "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID =PERSONNELPOS.CASEID "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL1 "
                StrSql = StrSql + "ON PERSONALALL1.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL1.PERSID  = PERSONNELPOS.M1 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL2 "
                StrSql = StrSql + "ON PERSONALALL2.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL2.PERSID  = PERSONNELPOS.M2 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL3 "
                StrSql = StrSql + "ON PERSONALALL3.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL3.PERSID  = PERSONNELPOS.M3 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL4 "
                StrSql = StrSql + "ON PERSONALALL4.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL4.PERSID  = PERSONNELPOS.M4 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL5 "
                StrSql = StrSql + "ON PERSONALALL5.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL5.PERSID  = PERSONNELPOS.M5 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL6 "
                StrSql = StrSql + "ON PERSONALALL6.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL6.PERSID  = PERSONNELPOS.M6 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL7 "
                StrSql = StrSql + "ON PERSONALALL7.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL7.PERSID  = PERSONNELPOS.M7 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL8 "
                StrSql = StrSql + "ON PERSONALALL8.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL8.PERSID  = PERSONNELPOS.M8 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL9 "
                StrSql = StrSql + "ON PERSONALALL9.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL9.PERSID  = PERSONNELPOS.M9 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL10 "
                StrSql = StrSql + "ON PERSONALALL10.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL10.PERSID  = PERSONNELPOS.M10 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL11 "
                StrSql = StrSql + "ON PERSONALALL11.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL11.PERSID  = PERSONNELPOS.M11 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL12 "
                StrSql = StrSql + "ON PERSONALALL12.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL12.PERSID  = PERSONNELPOS.M12 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL13 "
                StrSql = StrSql + "ON PERSONALALL13.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL13.PERSID  = PERSONNELPOS.M13 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL14 "
                StrSql = StrSql + "ON PERSONALALL14.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL14.PERSID  = PERSONNELPOS.M14 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL15 "
                StrSql = StrSql + "ON PERSONALALL15.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL15.PERSID  = PERSONNELPOS.M15 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL16 "
                StrSql = StrSql + "ON PERSONALALL16.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL16.PERSID  = PERSONNELPOS.M16 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL17 "
                StrSql = StrSql + "ON PERSONALALL17.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL17.PERSID  = PERSONNELPOS.M17 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL18 "
                StrSql = StrSql + "ON PERSONALALL18.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL18.PERSID  = PERSONNELPOS.M18 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL19 "
                StrSql = StrSql + "ON PERSONALALL19.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL19.PERSID  = PERSONNELPOS.M19 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL20 "
                StrSql = StrSql + "ON PERSONALALL20.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL20.PERSID  = PERSONNELPOS.M20 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL21 "
                StrSql = StrSql + "ON PERSONALALL21.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL21.PERSID  = PERSONNELPOS.M21 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL22 "
                StrSql = StrSql + "ON PERSONALALL22.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL22.PERSID  = PERSONNELPOS.M22 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL23 "
                StrSql = StrSql + "ON PERSONALALL23.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL23.PERSID  = PERSONNELPOS.M23 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL24 "
                StrSql = StrSql + "ON PERSONALALL24.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL24.PERSID  = PERSONNELPOS.M24 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL25 "
                StrSql = StrSql + "ON PERSONALALL25.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL25.PERSID  = PERSONNELPOS.M25 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL26 "
                StrSql = StrSql + "ON PERSONALALL26.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL26.PERSID  = PERSONNELPOS.M26 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL27 "
                StrSql = StrSql + "ON PERSONALALL27.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL27.PERSID  = PERSONNELPOS.M27 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL28 "
                StrSql = StrSql + "ON PERSONALALL28.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL28.PERSID  = PERSONNELPOS.M28 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL29 "
                StrSql = StrSql + "ON PERSONALALL29.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL29.PERSID  = PERSONNELPOS.M29 "
                StrSql = StrSql + "INNER JOIN VW_PERSONNELALLCOUNTRIES PERSONALALL30 "
                StrSql = StrSql + "ON PERSONALALL30.COUNTRYCODE = PREFERENCES.OCOUNTRY "
                StrSql = StrSql + "AND PERSONALALL30.PERSID  = PERSONNELPOS.M30 "
                StrSql = StrSql + "INNER JOIN PERSONNELNUM "
                StrSql = StrSql + "ON 	PERSONNELNUM.CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + "INNER JOIN PERSONNELSAL "
                StrSql = StrSql + "ON	PERSONNELSAL. CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + "INNER JOIN PERSONNELVP "
                StrSql = StrSql + "ON PERSONNELVP.CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + "INNER JOIN PERSONNELDEP "
                StrSql = StrSql + "ON PERSONNELDEP.CASEID = PERSONNELPOS.CASEID "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "PERSONNELPOS.CASEID IN(" + Cases + ") "
                StrSql = StrSql + "ORDER BY PERSONNELPOS.CASEID  "


                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPersonneldesCombo(ByVal CountryCode As String) As DropDownList
            Dim PersonnelCombo As New DropDownList
            Try
                'DataBase Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                Dim Dt As New DataTable()
                StrSql = "SELECT  "
                StrSql = StrSql + "PERSID, "
                StrSql = StrSql + "(PERSDE1||''||PERSDE2) AS PERSDE "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "VW_PERSONNELALLCOUNTRIES "
                StrSql = StrSql + "WHERE VW_PERSONNELALLCOUNTRIES.COUNTRYCODE = " + CountryCode + " "
                StrSql = StrSql + "ORDER BY PERSDE  "
                Dt = odbUtil.FillDataTable(StrSql, MyConnectionString)
                PersonnelCombo.DataSource = Dt
                PersonnelCombo.DataValueField = "PERSID"
                PersonnelCombo.DataTextField = "PERSDE"
                PersonnelCombo.DataBind()

                Return PersonnelCombo
            Catch ex As Exception
                Return PersonnelCombo
            End Try
        End Function

        Public Function GetCostCombo() As DropDownList
            Dim CostCombo As New DropDownList
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                Dim Dt As New DataTable()
                StrSql = "SELECT  "
                StrSql = StrSql + "COSTID, "
                StrSql = StrSql + "COSTDE1 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "COSTTYPE "
                StrSql = StrSql + "ORDER BY "
                StrSql = StrSql + "COSTDE1 "
                Dt = odbUtil.FillDataTable(StrSql, MyConnectionString)
                CostCombo.DataSource = Dt
                CostCombo.DataValueField = "COSTID"
                CostCombo.DataTextField = "COSTDE1"
                CostCombo.DataBind()
                Return CostCombo
            Catch ex As Exception
                Throw
                Return CostCombo
            End Try
        End Function

        Public Function GetPlantAreaQuery(ByVal Cases As String, ByVal Username As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")

                Dim StrSql As String = ""
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "PLANTSPACE.CASEID, "
                StrSql = StrSql + "( CASE WHEN PLANTSPACE.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = PLANTSPACE.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = PLANTSPACE.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + Username + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "ROUND(PLANTSPACE.M1*PREFERENCES.CONVAREA2) AS PRODUCTIONAREA, "
                StrSql = StrSql + "ROUND(PLANTSPACE.M2*PREFERENCES.CONVAREA2) AS WAREHOUSEAREA, "
                StrSql = StrSql + "ROUND(PLANTSPACE.M3*PREFERENCES.CONVAREA2) AS OFFICEAREA, "
                StrSql = StrSql + "ROUND(PLANTSPACE.M4*PREFERENCES.CONVAREA2) AS SUPPORTAREA, "
                StrSql = StrSql + "ROUND(PLANTSPACE.M5*PREFERENCES.CONVAREA2) AS TOTALAREA, "
                StrSql = StrSql + "PLANTSPACE.PRODUCTIONLEASEHB*PREFERENCES.CURR AS PRODUCTIONHIGHBAYLEASERATE, "
                StrSql = StrSql + "PLANTSPACE.PRODUCTIONLEASEPHB*PREFERENCES.CURR AS PRODUCTIONPHIGHBAYLEASERATE, "
                StrSql = StrSql + "PLANTSPACE.PRODUCTIONLEASE*PREFERENCES.CURR AS PRODUCTIONSTDLEASERATE, "
                StrSql = StrSql + "PLANTSPACE.WAREHOUSELEASE*PREFERENCES.CURR AS WAREHOUSELEASERATE, "
                StrSql = StrSql + "PLANTSPACE.OFFICELEASE*PREFERENCES.CURR AS OFFICELEASERATE, "
                StrSql = StrSql + "PLANTSPACE.SUPPORTLEASE*PREFERENCES.CURR AS SUPPORTLEASERATE, "
                StrSql = StrSql + "PLANTSPACE.M6*PREFERENCES.CURR AS TOTALPRODUCTIONRATE, "
                StrSql = StrSql + "PLANTSPACE.M7*PREFERENCES.CURR AS TOTALWAREHOUSERATE, "
                StrSql = StrSql + "PLANTSPACE.M8*PREFERENCES.CURR AS TOTALOFFICERATE, "
                StrSql = StrSql + "PLANTSPACE.M9*PREFERENCES.CURR AS TOTALSUPPORTRATE, "
                StrSql = StrSql + "PLANTSPACE.M10*PREFERENCES.CURR AS TOTALTRATE, "
                StrSql = StrSql + "PREFERENCES.CURR AS CURRENCYCONVERSION, "
                StrSql = StrSql + "PREFERENCES.UNITS AS UNIT, "
                StrSql = StrSql + "PREFERENCES.CONVAREA2 AS AREACONVERSION, "
                StrSql = StrSql + "PREFERENCES.title4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "PLANTSPACE "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = PLANTSPACE. CASEID "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "PLANTSPACE.CASEID IN(" + Cases + ") "

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPlantLeaseRate() As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                Dim Dt As New DataTable()
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "Select  "
                StrSql = StrSql + "Areatype.areaID, "
                StrSql = StrSql + "Areatype.Leaserate "
                StrSql = StrSql + "From "
                StrSql = StrSql + "Areatype "
                StrSql = StrSql + "Order by Areatype.areaID "
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetEnergyQuery(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'Database Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                Dim Dt As New DataTable()
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                'Sql
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "PLANTENERGY.CASEID, "
                StrSql = StrSql + "( CASE WHEN PLANTENERGY.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = PLANTENERGY.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = PLANTENERGY.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "PRICE1.PRICE AS  ELECTRICITYSUG, "
                StrSql = StrSql + "PRICE2.PRICE AS  NATURALGASSUG, "
                StrSql = StrSql + "(PLANTENERGY.ELECPRICE*PREFERENCES.CURR) AS ELECTRICITYPREFPRICE, "
                StrSql = StrSql + "(PLANTENERGY.NGASPRICE*PREFERENCES.CURR) AS NATURALGASPREFPRICE, "
                StrSql = StrSql + "PLANTENERGY.M1 AS PRODUCTIONELECTRICENERGYREQ, "
                StrSql = StrSql + "PLANTENERGY.M6 AS PRODUCTIONNATURALENERGYREQ, "
                StrSql = StrSql + "(PLANTENERGY.D1*PREFERENCES.CURR) AS PRODUCTIONELECTRICENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D6*PREFERENCES.CURR) AS PRODUCTIONNATURALENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D11*PREFERENCES.CURR) AS PRODUCTIONTOTALENERGYCOST, "
                StrSql = StrSql + "PLANTENERGY.M2 AS WAREHOUSEELECTRICENERGYREQ, "
                StrSql = StrSql + "PLANTENERGY.M7 AS WAREHOUSENATURALENERGYREQ, "
                StrSql = StrSql + "(PLANTENERGY.D2*PREFERENCES.CURR) AS WAREHOUSEELECTRICENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D7*PREFERENCES.CURR) AS WAREHOUSENATURALENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D12*PREFERENCES.CURR) AS WAREHOUSETOTALENERGYCOST, "
                StrSql = StrSql + "PLANTENERGY.M3 AS OFFICEELECTRICENERGYREQ, "
                StrSql = StrSql + "PLANTENERGY.M8 AS OFFICENATURALENERGYREQ, "
                StrSql = StrSql + "(PLANTENERGY.D3*PREFERENCES.CURR) AS OFFICEELECTRICENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D8*PREFERENCES.CURR) AS OFFICENATURALENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D13*PREFERENCES.CURR) AS OFFICETOTALENERGYCOST, "
                StrSql = StrSql + "PLANTENERGY.M4 AS SUPPORTELECTRICENERGYREQ, "
                StrSql = StrSql + "PLANTENERGY.M9 AS SUPPORTNATURALENERGYREQ, "
                StrSql = StrSql + "(PLANTENERGY.D4*PREFERENCES.CURR) AS SUPPORTELECTRICENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D9*PREFERENCES.CURR) AS SUPPORTNATURALENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D14*PREFERENCES.CURR) AS SUPPORTTOTALENERGYCOST, "
                StrSql = StrSql + "PLANTENERGY.M5 AS TOTALELECTRICENERGYREQ, "
                StrSql = StrSql + "PLANTENERGY.M10 AS TOTALNATURALENERGYREQ, "
                StrSql = StrSql + "(PLANTENERGY.D5*PREFERENCES.CURR) AS TOTALELECTRICENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D10*PREFERENCES.CURR) AS TOTALNATURALENERGYCOST, "
                StrSql = StrSql + "(PLANTENERGY.D15*PREFERENCES.CURR) AS TOTALTOTALENERGYCOST, "
                StrSql = StrSql + "PREFERENCES.TITLE4, "
                StrSql = StrSql + "PREFERENCES.UNITS "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "PLANTENERGY, "
                StrSql = StrSql + "(SELECT PRICE FROM ENERGY WHERE ENERGYID =1)  PRICE1, "
                StrSql = StrSql + "(SELECT PRICE FROM ENERGY WHERE ENERGYID =2)  PRICE2, "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "PREFERENCES.CASEID = PLANTENERGY.CASEID "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "PLANTENERGY.CASEID IN (" + Cases + ") "
                StrSql = StrSql + "ORDER BY PLANTENERGY.CASEID "


                'Getting table From Database
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetCustomerSql(ByVal Cases As String, ByVal Username As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "CUSTOMERIN.CASEID, "
                StrSql = StrSql + "( CASE WHEN CUSTOMERIN.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = CUSTOMERIN.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = CUSTOMERIN.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + Username + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "ROUND((CUSTOMERIN.M1*PREFERENCES.CURR/PREFERENCES.CONVWT),3) AS PRODUCTPURCHASE, "
                StrSql = StrSql + "ROUND(CUSTOMERIN.M2*PREFERENCES.CONVTHICK3) AS SHIPPINGDISTANCE, "
                StrSql = StrSql + "ROUND((CUSTOMERIN.M3*PREFERENCES.CURR/PREFERENCES.CONVTHICK3),3) AS MILEAGECOST, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE2)as title2, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4)as title4, "
                StrSql = StrSql + "TRIM(PREFERENCES.UNITS)as unit "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "CUSTOMERIN "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = CUSTOMERIN.CASEID "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "CUSTOMERIN.CASEID IN (" + Cases + ") "
                StrSql = StrSql + "ORDER BY CUSTOMERIN.CASEID "

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetFixedCostSql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                'Database Connection
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                'Sql
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "FIXEDCOSTPCT.CASEID, "
                StrSql = StrSql + "( CASE WHEN FIXEDCOSTPCT.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY1.CATEGORY AS CATEGORY1, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY2.CATEGORY AS CATEGORY2, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY3.CATEGORY AS CATEGORY3, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY4.CATEGORY AS CATEGORY4, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY5.CATEGORY AS CATEGORY5, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY6.CATEGORY AS CATEGORY6, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY7.CATEGORY AS CATEGORY7, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY8.CATEGORY AS CATEGORY8, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY9.CATEGORY AS CATEGORY9, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY10.CATEGORY AS CATEGORY10, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY11.CATEGORY AS CATEGORY11, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY12.CATEGORY AS CATEGORY12, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY13.CATEGORY AS CATEGORY13, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY14.CATEGORY AS CATEGORY14, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY15.CATEGORY AS CATEGORY15, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY16.CATEGORY AS CATEGORY16, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY17.CATEGORY AS CATEGORY17, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY18.CATEGORY AS CATEGORY18, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY19.CATEGORY AS CATEGORY19, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY20.CATEGORY AS CATEGORY20, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY21.CATEGORY AS CATEGORY21, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY22.CATEGORY AS CATEGORY22, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY23.CATEGORY AS CATEGORY23, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY24.CATEGORY AS CATEGORY24, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY25.CATEGORY AS CATEGORY25, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY26.CATEGORY AS CATEGORY26, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY27.CATEGORY AS CATEGORY27, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY28.CATEGORY AS CATEGORY28, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY29.CATEGORY AS CATEGORY29, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY30.CATEGORY AS CATEGORY30, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M1*PREFERENCES.CURR) AS FIXEDVALUE1, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M2*PREFERENCES.CURR) AS FIXEDVALUE2, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M3*PREFERENCES.CURR) AS FIXEDVALUE3, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M4*PREFERENCES.CURR) AS FIXEDVALUE4, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M5*PREFERENCES.CURR) AS FIXEDVALUE5, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M6*PREFERENCES.CURR) AS FIXEDVALUE6, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M7*PREFERENCES.CURR) AS FIXEDVALUE7, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M8*PREFERENCES.CURR) AS FIXEDVALUE8, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M9*PREFERENCES.CURR) AS FIXEDVALUE9, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M10*PREFERENCES.CURR) AS FIXEDVALUE10, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M11*PREFERENCES.CURR) AS FIXEDVALUE11, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M12*PREFERENCES.CURR) AS FIXEDVALUE12, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M13*PREFERENCES.CURR) AS FIXEDVALUE13, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M14*PREFERENCES.CURR) AS FIXEDVALUE14, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M15*PREFERENCES.CURR) AS FIXEDVALUE15, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M16*PREFERENCES.CURR) AS FIXEDVALUE16, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M17*PREFERENCES.CURR) AS FIXEDVALUE17, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M18*PREFERENCES.CURR) AS FIXEDVALUE18, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M19*PREFERENCES.CURR) AS FIXEDVALUE19, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M20*PREFERENCES.CURR) AS FIXEDVALUE20, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M21*PREFERENCES.CURR) AS FIXEDVALUE21, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M22*PREFERENCES.CURR) AS FIXEDVALUE22, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M23*PREFERENCES.CURR) AS FIXEDVALUE23, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M24*PREFERENCES.CURR) AS FIXEDVALUE24, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M25*PREFERENCES.CURR) AS FIXEDVALUE25, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M26*PREFERENCES.CURR) AS FIXEDVALUE26, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M27*PREFERENCES.CURR) AS FIXEDVALUE27, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M28*PREFERENCES.CURR) AS FIXEDVALUE28, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M29*PREFERENCES.CURR) AS FIXEDVALUE29, "
                StrSql = StrSql + "(FIXEDCOSTPCT.M30*PREFERENCES.CURR) AS FIXEDVALUE30, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY1.RULE  AS RULE1, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY2.RULE  AS RULE2, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY3.RULE  AS RULE3, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY4.RULE  AS RULE4, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY5.RULE  AS RULE5, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY6.RULE  AS RULE6, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY7.RULE  AS RULE7, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY8.RULE  AS RULE8, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY9.RULE  AS RULE9, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY10.RULE  AS RULE10, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY11.RULE  AS RULE11, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY12.RULE  AS RULE12, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY13.RULE  AS RULE13, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY14.RULE  AS RULE14, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY15.RULE  AS RULE15, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY16.RULE  AS RULE16, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY17.RULE  AS RULE17, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY18.RULE  AS RULE18, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY19.RULE  AS RULE19, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY20.RULE  AS RULE20, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY21.RULE  AS RULE21, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY22.RULE  AS RULE22, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY23.RULE  AS RULE23, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY24.RULE  AS RULE24, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY25.RULE  AS RULE25, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY26.RULE  AS RULE26, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY27.RULE  AS RULE27, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY28.RULE  AS RULE28, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY29.RULE  AS RULE29, "
                StrSql = StrSql + "FIXEDCOSTCATEGORY30.RULE  AS RULE30, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M1*PREFERENCES.CURR) AS FIXEDCOSTSUG1, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M2*PREFERENCES.CURR) AS FIXEDCOSTSUG2, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M3*PREFERENCES.CURR) AS FIXEDCOSTSUG3, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M4*PREFERENCES.CURR) AS FIXEDCOSTSUG4, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M5*PREFERENCES.CURR) AS FIXEDCOSTSUG5, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M6*PREFERENCES.CURR) AS FIXEDCOSTSUG6, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M7*PREFERENCES.CURR) AS FIXEDCOSTSUG7, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M8*PREFERENCES.CURR) AS FIXEDCOSTSUG8, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M9*PREFERENCES.CURR) AS FIXEDCOSTSUG9, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M10*PREFERENCES.CURR) AS FIXEDCOSTSUG10, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M11*PREFERENCES.CURR) AS FIXEDCOSTSUG11, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M12*PREFERENCES.CURR) AS FIXEDCOSTSUG12, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M13*PREFERENCES.CURR) AS FIXEDCOSTSUG13, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M14*PREFERENCES.CURR) AS FIXEDCOSTSUG14, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M15*PREFERENCES.CURR) AS FIXEDCOSTSUG15, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M16*PREFERENCES.CURR) AS FIXEDCOSTSUG16, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M17*PREFERENCES.CURR) AS FIXEDCOSTSUG17, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M18*PREFERENCES.CURR) AS FIXEDCOSTSUG18, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M19*PREFERENCES.CURR) AS FIXEDCOSTSUG19, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M20*PREFERENCES.CURR) AS FIXEDCOSTSUG20, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M21*PREFERENCES.CURR) AS FIXEDCOSTSUG21, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M22*PREFERENCES.CURR) AS FIXEDCOSTSUG22, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M23*PREFERENCES.CURR) AS FIXEDCOSTSUG23, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M24*PREFERENCES.CURR) AS FIXEDCOSTSUG24, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M25*PREFERENCES.CURR) AS FIXEDCOSTSUG25, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M26*PREFERENCES.CURR) AS FIXEDCOSTSUG26, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M27*PREFERENCES.CURR) AS FIXEDCOSTSUG27, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M28*PREFERENCES.CURR) AS FIXEDCOSTSUG28, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M29*PREFERENCES.CURR) AS FIXEDCOSTSUG29, "
                StrSql = StrSql + "ROUND(FIXEDCOSTSUG.M30*PREFERENCES.CURR) AS FIXEDCOSTSUG30, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M1*PREFERENCES.CURR) AS FIXEDCOSTPREF1, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M2*PREFERENCES.CURR) AS FIXEDCOSTPREF2, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M3*PREFERENCES.CURR) AS FIXEDCOSTPREF3, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M4*PREFERENCES.CURR) AS FIXEDCOSTPREF4, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M5*PREFERENCES.CURR) AS FIXEDCOSTPREF5, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M6*PREFERENCES.CURR) AS FIXEDCOSTPREF6, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M7*PREFERENCES.CURR) AS FIXEDCOSTPREF7, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M8*PREFERENCES.CURR) AS FIXEDCOSTPREF8, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M9*PREFERENCES.CURR) AS FIXEDCOSTPREF9, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M10*PREFERENCES.CURR) AS FIXEDCOSTPREF10, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M11*PREFERENCES.CURR) AS FIXEDCOSTPREF11, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M12*PREFERENCES.CURR) AS FIXEDCOSTPREF12, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M13*PREFERENCES.CURR) AS FIXEDCOSTPREF13, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M14*PREFERENCES.CURR) AS FIXEDCOSTPREF14, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M15*PREFERENCES.CURR) AS FIXEDCOSTPREF15, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M16*PREFERENCES.CURR) AS FIXEDCOSTPREF16, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M17*PREFERENCES.CURR) AS FIXEDCOSTPREF17, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M18*PREFERENCES.CURR) AS FIXEDCOSTPREF18, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M19*PREFERENCES.CURR) AS FIXEDCOSTPREF19, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M20*PREFERENCES.CURR) AS FIXEDCOSTPREF20, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M21*PREFERENCES.CURR) AS FIXEDCOSTPREF21, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M22*PREFERENCES.CURR) AS FIXEDCOSTPREF22, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M23*PREFERENCES.CURR) AS FIXEDCOSTPREF23, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M24*PREFERENCES.CURR) AS FIXEDCOSTPREF24, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M25*PREFERENCES.CURR) AS FIXEDCOSTPREF25, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M26*PREFERENCES.CURR) AS FIXEDCOSTPREF26, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M27*PREFERENCES.CURR) AS FIXEDCOSTPREF27, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M28*PREFERENCES.CURR) AS FIXEDCOSTPREF28, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M29*PREFERENCES.CURR) AS FIXEDCOSTPREF29, "
                StrSql = StrSql + "(FIXEDCOSTPRE.M30*PREFERENCES.CURR) AS FIXEDCOSTPREF30, "
                StrSql = StrSql + "FIXEDCOSTDEP.M1 AS FIXEDCOSTDEP1, "
                StrSql = StrSql + "FIXEDCOSTDEP.M2 AS FIXEDCOSTDEP2, "
                StrSql = StrSql + "FIXEDCOSTDEP.M3 AS FIXEDCOSTDEP3, "
                StrSql = StrSql + "FIXEDCOSTDEP.M4 AS FIXEDCOSTDEP4, "
                StrSql = StrSql + "FIXEDCOSTDEP.M5 AS FIXEDCOSTDEP5, "
                StrSql = StrSql + "FIXEDCOSTDEP.M6 AS FIXEDCOSTDEP6, "
                StrSql = StrSql + "FIXEDCOSTDEP.M7 AS FIXEDCOSTDEP7, "
                StrSql = StrSql + "FIXEDCOSTDEP.M8 AS FIXEDCOSTDEP8, "
                StrSql = StrSql + "FIXEDCOSTDEP.M9 AS FIXEDCOSTDEP9, "
                StrSql = StrSql + "FIXEDCOSTDEP.M10 AS FIXEDCOSTDEP10, "
                StrSql = StrSql + "FIXEDCOSTDEP.M11 AS FIXEDCOSTDEP11, "
                StrSql = StrSql + "FIXEDCOSTDEP.M12 AS FIXEDCOSTDEP12, "
                StrSql = StrSql + "FIXEDCOSTDEP.M13 AS FIXEDCOSTDEP13, "
                StrSql = StrSql + "FIXEDCOSTDEP.M14 AS FIXEDCOSTDEP14, "
                StrSql = StrSql + "FIXEDCOSTDEP.M15 AS FIXEDCOSTDEP15, "
                StrSql = StrSql + "FIXEDCOSTDEP.M16 AS FIXEDCOSTDEP16, "
                StrSql = StrSql + "FIXEDCOSTDEP.M17 AS FIXEDCOSTDEP17, "
                StrSql = StrSql + "FIXEDCOSTDEP.M18 AS FIXEDCOSTDEP18, "
                StrSql = StrSql + "FIXEDCOSTDEP.M19 AS FIXEDCOSTDEP19, "
                StrSql = StrSql + "FIXEDCOSTDEP.M20 AS FIXEDCOSTDEP20, "
                StrSql = StrSql + "FIXEDCOSTDEP.M21 AS FIXEDCOSTDEP21, "
                StrSql = StrSql + "FIXEDCOSTDEP.M22 AS FIXEDCOSTDEP22, "
                StrSql = StrSql + "FIXEDCOSTDEP.M23 AS FIXEDCOSTDEP23, "
                StrSql = StrSql + "FIXEDCOSTDEP.M24 AS FIXEDCOSTDEP24, "
                StrSql = StrSql + "FIXEDCOSTDEP.M25 AS FIXEDCOSTDEP25, "
                StrSql = StrSql + "FIXEDCOSTDEP.M26 AS FIXEDCOSTDEP26, "
                StrSql = StrSql + "FIXEDCOSTDEP.M27 AS FIXEDCOSTDEP27, "
                StrSql = StrSql + "FIXEDCOSTDEP.M28 AS FIXEDCOSTDEP28, "
                StrSql = StrSql + "FIXEDCOSTDEP.M29 AS FIXEDCOSTDEP29, "
                StrSql = StrSql + "FIXEDCOSTDEP.M30 AS FIXEDCOSTDEP30, "
                StrSql = StrSql + "ROUND(TOTAL.ASSETTOTAL*PREFERENCES.CURR) AS TOTALASSETVALUE, "
                StrSql = StrSql + "DEPRECIATION.YEARS AS DEPYEARS, "
                StrSql = StrSql + "ROUND(DEPRECIATION.DEPRECIATION*PREFERENCES.CURR) AS ANNUALDEPRECIATIONCOST, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4) AS TITLE4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "FIXEDCOSTPCT "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTSUG "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTSUG.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTPRE "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTPRE.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTDEP "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTDEP.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "TOTAL "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "TOTAL.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "DEPRECIATION "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "DEPRECIATION.CASEID = FIXEDCOSTPCT.CASEID "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY1 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY1.SEQNO=1 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY2 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY2.SEQNO=2 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY3 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY3.SEQNO=3 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY4 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY4.SEQNO=4 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY5 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY5.SEQNO=5 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY6 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY6.SEQNO=6 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY7 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY7.SEQNO=7 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY8 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY8.SEQNO=8 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY9 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY9.SEQNO=9 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY10 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY10.SEQNO=10 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY11 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY11.SEQNO=11 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY12 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY12.SEQNO=12 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY13 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY13.SEQNO=13 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY14 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY14.SEQNO=14 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY15 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY15.SEQNO=15 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY16 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY16.SEQNO=16 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY17 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY17.SEQNO=17 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY18 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY18.SEQNO=18 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY19 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY19.SEQNO=19 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY20 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY20.SEQNO=20 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY21 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY21.SEQNO=21 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY22 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY22.SEQNO=22 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY23 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY23.SEQNO=23 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY24 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY24.SEQNO=24 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY25 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY25.SEQNO=25 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY26 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY26.SEQNO=26 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY27 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY27.SEQNO=27 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY28 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY28.SEQNO=28 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY29 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY29.SEQNO=29 "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "FIXEDCOSTCATEGORY  FIXEDCOSTCATEGORY30 "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "FIXEDCOSTCATEGORY30.SEQNO=30 "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "FIXEDCOSTPCT.CASEID IN (" + Cases + ") "

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetComparison1Sql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "RESULTSPL.CASEID, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS   CASEDES, "
                StrSql = StrSql + "VOLUME AS SALESVOLUME1, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((FINVOLMSI*CONVAREA),0) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "(FINVOLMUNITS) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS SALESVOLUME2, "
                StrSql = StrSql + "CASE  "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "1 "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "2 "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS STATUS, "
                StrSql = StrSql + "ROUND((REVENUE*CURR),0) AS DOLLERREVENUE, "
                StrSql = StrSql + "ROUND((VMATERIAL*CURR),0) AS DOLLERMATERIALS , "
                StrSql = StrSql + "ROUND((VLABOR*CURR),0) AS DOLLERVLABOR , "
                StrSql = StrSql + "ROUND((VENERGY*CURR),0) AS DOLLERVENERGY , "
                StrSql = StrSql + "ROUND((VPACK*CURR),0) AS DOLLERDISTRIBUTIONPACK , "
                StrSql = StrSql + "ROUND((VSHIP*CURR),0) AS DOLLERSHIPPING , "
                StrSql = StrSql + "ROUND((VM*CURR),0) AS DOLLERVARIABLEMARGIN , "
                StrSql = StrSql + "ROUND((OFFICESUPPLIES*CURR),0) AS DOLLEROFFICESUPP , "
                StrSql = StrSql + "ROUND((PLABOR*CURR),0) AS DOLLERPLABOR , "
                StrSql = StrSql + "ROUND((PENERGY*CURR),0) AS DOLLERPENERGY , "
                StrSql = StrSql + "ROUND((LEASECOST*CURR),0) AS DOLLERLEASECOST , "
                StrSql = StrSql + "ROUND((INSURANCE*CURR),0) AS DOLLERINSURANCE , "
                StrSql = StrSql + "ROUND((UTILITIES*CURR),0) AS DOLLERUTILITIES , "
                StrSql = StrSql + "ROUND((COMMUN*CURR),0) AS DOLLERCOMMUNICATIONS , "
                StrSql = StrSql + "ROUND((TRAVEL*CURR),0) AS DOLLERTRAVEL , "
                StrSql = StrSql + "ROUND((MAINT*CURR),0) AS DOLLERMAINTENANCESUPP , "
                StrSql = StrSql + "ROUND((MINOR*CURR),0) AS DOLLERMINOREQUIP , "
                StrSql = StrSql + "ROUND((OUT*CURR),0) AS DOLLEROUTSIDESERV , "
                StrSql = StrSql + "ROUND((PROF*CURR),0) AS DOLLERPROFESSIONALSERV , "
                StrSql = StrSql + "ROUND((LAB*CURR),0) AS DOLLERLABORATORYSUPP , "
                StrSql = StrSql + "ROUND((INKSUP*CURR),0) AS DOLLERINKSUPP , "
                StrSql = StrSql + "ROUND((PLATESUP*CURR),0) AS DOLLERPLATESUPP , "
                StrSql = StrSql + "ROUND((METSUP*CURR),0) AS DOLLERMETALSUPP , "
                StrSql = StrSql + "ROUND((PM*CURR),0) AS DOLLERPLANTMARGIN, "
                StrSql = StrSql + "ROUND((REVENUE/REVENUE*100),2)AS REVENUEPCTREVENUE, "
                StrSql = StrSql + "ROUND((VMATERIAL/REVENUE*100),2)AS REVENUEPCTMATERIALS , "
                StrSql = StrSql + "ROUND((VLABOR/REVENUE*100),2)AS REVENUEPCTVLABOR , "
                StrSql = StrSql + "ROUND((VENERGY/REVENUE*100),2)AS REVENUEPCTVENERGY , "
                StrSql = StrSql + "ROUND((VPACK/REVENUE*100),2)AS REVENUEPCTDISTRIBUTIONPACK , "
                StrSql = StrSql + "ROUND((VSHIP/REVENUE*100),2)AS REVENUEPCTSHIPPING , "
                StrSql = StrSql + "ROUND((VM/REVENUE*100),2)AS REVENUEPCTVARIABLEMARGIN , "
                StrSql = StrSql + "ROUND((OFFICESUPPLIES/REVENUE*100),2)AS REVENUEPCTOFFICESUPP , "
                StrSql = StrSql + "ROUND((PLABOR/REVENUE*100),2)AS REVENUEPCTPLABOR , "
                StrSql = StrSql + "ROUND((PENERGY/REVENUE*100),2)AS REVENUEPCTPENERGY , "
                StrSql = StrSql + "ROUND((LEASECOST/REVENUE*100),2)AS REVENUEPCTLEASECOST , "
                StrSql = StrSql + "ROUND((INSURANCE/REVENUE*100),2)AS REVENUEPCTINSURANCE , "
                StrSql = StrSql + "ROUND((UTILITIES/REVENUE*100),2)AS REVENUEPCTUTILITIES , "
                StrSql = StrSql + "ROUND((COMMUN/REVENUE*100),2)AS REVENUEPCTCOMMUNICATIONS , "
                StrSql = StrSql + "ROUND((TRAVEL/REVENUE*100),2)AS REVENUEPCTTRAVEL , "
                StrSql = StrSql + "ROUND((MAINT/REVENUE*100),2)AS REVENUEPCTMAINTENANCESUPP , "
                StrSql = StrSql + "ROUND((MINOR/REVENUE*100),2)AS REVENUEPCTMINOREQUIP , "
                StrSql = StrSql + "ROUND((OUT/REVENUE*100),2)AS REVENUEPCTOUTSIDESERV , "
                StrSql = StrSql + "ROUND((PROF/REVENUE*100),2)AS REVENUEPCTPROFESSIONALSERV , "
                StrSql = StrSql + "ROUND((LAB/REVENUE*100),2)AS REVENUEPCTLABORATORYSUPP , "
                StrSql = StrSql + "ROUND((INKSUP/REVENUE*100),2)AS REVENUEPCTINKSUPP , "
                StrSql = StrSql + "ROUND((PLATESUP/REVENUE*100),2)AS REVENUEPCTPLATESUPP , "
                StrSql = StrSql + "ROUND((METSUP/REVENUE*100),2)AS REVENUEPCTMETALSUPP , "
                StrSql = StrSql + "ROUND((PM/REVENUE*100),2)AS REVENUEPCTPLANTMARGI, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4) AS TITLE4, "
                StrSql = StrSql + "PREFERENCES.UNITS "
                StrSql = StrSql + "FROM RESULTSPL "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "WHERE RESULTSPL.CASEID  IN (" + Cases + ") "

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Return Dts
            End Try
        End Function

        Public Function GetComparison2Sql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "RESULTSPL.CASEID, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS   CASEDES, "
                StrSql = StrSql + "VOLUME AS SALESVOLUME1, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((FINVOLMSI*CONVAREA),0) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "(FINVOLMUNITS) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS SALESVOLUME2, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "1 "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "2 "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS Status, "
                StrSql = StrSql + "ROUND((REVENUE/VOLUME)*(CURR/CONVWT),3) AS DOLLERREVENUE, "
                StrSql = StrSql + "ROUND((VMATERIAL/VOLUME)*(CURR/CONVWT),3) AS DOLLERMATERIALS , "
                StrSql = StrSql + "ROUND((VLABOR/VOLUME)*(CURR/CONVWT),3) AS DOLLERVLABOR , "
                StrSql = StrSql + "ROUND((VENERGY/VOLUME)*(CURR/CONVWT),3) AS DOLLERVENERGY , "
                StrSql = StrSql + "ROUND((VPACK/VOLUME)*(CURR/CONVWT),3) AS DOLLERDISTRIBUTIONPACK , "
                StrSql = StrSql + "ROUND((VSHIP/VOLUME)*(CURR/CONVWT),3) AS DOLLERSHIPPING , "
                StrSql = StrSql + "ROUND((VM/VOLUME)*(CURR/CONVWT),3) AS DOLLERVARIABLEMARGIN , "
                StrSql = StrSql + "ROUND((OFFICESUPPLIES/VOLUME)*(CURR/CONVWT),3) AS DOLLEROFFICESUPP , "
                StrSql = StrSql + "ROUND((PLABOR/VOLUME)*(CURR/CONVWT),3) AS DOLLERPLABOR , "
                StrSql = StrSql + "ROUND((PENERGY/VOLUME)*(CURR/CONVWT),3) AS DOLLERPENERGY , "
                StrSql = StrSql + "ROUND((LEASECOST/VOLUME)*(CURR/CONVWT),3) AS DOLLERLEASECOST , "
                StrSql = StrSql + "ROUND((INSURANCE/VOLUME)*(CURR/CONVWT),3) AS DOLLERINSURANCE , "
                StrSql = StrSql + "ROUND((UTILITIES/VOLUME)*(CURR/CONVWT),3) AS DOLLERUTILITIES , "
                StrSql = StrSql + "ROUND((COMMUN/VOLUME)*(CURR/CONVWT),3) AS DOLLERCOMMUNICATIONS , "
                StrSql = StrSql + "ROUND((TRAVEL/VOLUME)*(CURR/CONVWT),3) AS DOLLERTRAVEL , "
                StrSql = StrSql + "ROUND((MAINT/VOLUME)*(CURR/CONVWT),3) AS DOLLERMAINTENANCESUPP , "
                StrSql = StrSql + "ROUND((MINOR/VOLUME)*(CURR/CONVWT),3) AS DOLLERMINOREQUIP , "
                StrSql = StrSql + "ROUND((OUT/VOLUME)*(CURR/CONVWT),3) AS DOLLEROUTSIDESERV , "
                StrSql = StrSql + "ROUND((PROF/VOLUME)*(CURR/CONVWT),3) AS DOLLERPROFESSIONALSERV , "
                StrSql = StrSql + "ROUND((LAB/VOLUME)*(CURR/CONVWT),3) AS DOLLERLABORATORYSUPP , "
                StrSql = StrSql + "ROUND((INKSUP/VOLUME)*(CURR/CONVWT),3) AS DOLLERINKSUPP , "
                StrSql = StrSql + "ROUND((PLATESUP/VOLUME)*(CURR/CONVWT),3) AS DOLLERPLATESUPP , "
                StrSql = StrSql + "ROUND((METSUP/VOLUME)*(CURR/CONVWT),3) AS DOLLERMETALSUPP , "
                StrSql = StrSql + "ROUND((PM/VOLUME)*(CURR/CONVWT),3) AS DOLLERPLANTMARGIN, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4) AS TITLE4, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE8) AS TITLE8, "
                StrSql = StrSql + "PREFERENCES.UNITS "
                StrSql = StrSql + "FROM RESULTSPL "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "WHERE RESULTSPL.CASEID  IN (" + Cases + ") "
                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Return Dts
            End Try
        End Function

        Public Function GetComparison3Sql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "RESULTSPL.CASEID, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS   CASEDES, "
                StrSql = StrSql + "VOLUME AS SALESVOLUME1, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "ROUND((FINVOLMSI*CONVAREA),0) "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "(FINVOLMUNITS) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS SALESVOLUME2, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMSI>0 THEN "
                StrSql = StrSql + "( "
                StrSql = StrSql + "1 "
                StrSql = StrSql + ") "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN FINVOLMUNITS>0 THEN "
                StrSql = StrSql + "2 "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "0 "
                StrSql = StrSql + "END "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS Status, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((REVENUE/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((REVENUE/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITREVENUE, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VMATERIAL/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VMATERIAL/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITMATERIAL, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VLABOR/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VLABOR/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITVLABOR, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VENERGY/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VENERGY/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITVENERGY, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VPACK/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VPACK/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITDISTRIBUTIONPACK, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VSHIP/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VSHIP/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITSHIPPING, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((VM/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((VM/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITVARIABLEMARGIN, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((OFFICESUPPLIES/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((OFFICESUPPLIES/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITOFFICESUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((PLABOR/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((PLABOR/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITPLABOR, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((PENERGY/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((PENERGY/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITPENERGY, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((LEASECOST/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((LEASECOST/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITLEASECOST, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((INSURANCE/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((INSURANCE/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITINSURANCE, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((UTILITIES/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((UTILITIES/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITUTILITIES, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((COMMUN/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((COMMUN/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITCOMMUNICATIONS, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((TRAVEL/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((TRAVEL/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITTRAVEL, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((MAINT/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((MAINT/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITMAINTENANCESUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((MINOR/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((MINOR/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITMINOREQUIP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((OUT/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((OUT/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITOUTSIDESERV, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((PROF/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((PROF/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITPROFESSIONALSERV, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((LAB/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((LAB/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITLABORATORYSUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((INKSUP/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((INKSUP/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITINKSUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((PLATESUP/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((PLATESUP/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITPLATESUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((METSUP/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((METSUP/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITMETALSUPP, "
                StrSql = StrSql + "CASE "
                StrSql = StrSql + "WHEN  FINVOLMSI > 1 THEN "
                StrSql = StrSql + "ROUND((PM/FINVOLMSI*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "ELSE "
                StrSql = StrSql + "ROUND((PM/FINVOLMUNITS*100)*(CURR/CONVWT),3) "
                StrSql = StrSql + "END "
                StrSql = StrSql + "AS UNITPLANTMARGIN, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4) AS TITLE4, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE6) AS TITLE6, "
                StrSql = StrSql + "PREFERENCES.UNITS "
                StrSql = StrSql + "FROM RESULTSPL "
                StrSql = StrSql + "INNER JOIN "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "ON "
                StrSql = StrSql + "PREFERENCES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "WHERE RESULTSPL.CASEID  IN (" + Cases + ")"


                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Return Dts
            End Try
        End Function

        Public Function GetROI(ByVal SelectedCaseid As String, ByVal Cases As String, ByVal Username As String, ByVal Password As String, ByVal CostofCapital As String, ByVal Year As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT  "
                StrSql = StrSql + "1 orderby, "
                StrSql = StrSql + "VARIABLE.CASEID, "
                StrSql = StrSql + "VARIABLE.CASEDES, "
                StrSql = StrSql + "VARIABLE.PALNTMARGIN AS PLANTMARGIN, "
                StrSql = StrSql + "NULL AS GAINFROMINVESTMENT, "
                StrSql = StrSql + "NULL AS COSTOFINVESTMENT, "
                StrSql = StrSql + "NULL AS NPV, "
                StrSql = StrSql + "FIXED.BASEASSETTOTAL AS TOTALINVESTMENT, "
                StrSql = StrSql + "NULL AS ROI "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "(SELECT DISTINCT "
                StrSql = StrSql + "RESULTSPL.CASEID AS BASECASE, "
                StrSql = StrSql + "PM AS BASEPLANTMARGIN, "
                StrSql = StrSql + "ASSETTOTAL AS BASEASSETTOTAL "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "RESULTSPL, "
                StrSql = StrSql + "TOTAL "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID= " + SelectedCaseid + " "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "RESULTSPL.CASEID=TOTAL.CASEID) "
                StrSql = StrSql + "FIXED, "
                StrSql = StrSql + "(SELECT DISTINCT "
                StrSql = StrSql + "RESULTSPL.CASEID, "
                StrSql = StrSql + "PM AS PALNTMARGIN, "
                StrSql = StrSql + "ASSETTOTAL, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + Username + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS   CASEDES "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "RESULTSPL, "
                StrSql = StrSql + "TOTAL "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID =" + SelectedCaseid + "  "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "RESULTSPL.CASEID=TOTAL.CASEID) "
                StrSql = StrSql + "VARIABLE "
                StrSql = StrSql + "UNION "
                StrSql = StrSql + "SELECT "
                StrSql = StrSql + "2 orderby, "
                StrSql = StrSql + "VARIABLE.CASEID, "
                StrSql = StrSql + "VARIABLE.CASEDES, "
                StrSql = StrSql + "VARIABLE.PALNTMARGIN AS PLANTMARGIN, "
                StrSql = StrSql + "(VARIABLE.PALNTMARGIN - FIXED.BASEPLANTMARGIN) AS GAINFROMINVESTMENT, "
                StrSql = StrSql + "(VARIABLE.ASSETTOTAL- FIXED.BASEASSETTOTAL) AS COSTOFINVESTMENT, "
                StrSql = StrSql + "((VARIABLE.PALNTMARGIN - FIXED.BASEPLANTMARGIN)*(1-POWER(1+" + CostofCapital + ",-" + Year + "))/" + CostofCapital + ") AS NPV, "
                StrSql = StrSql + " VARIABLE.ASSETTOTAL AS TOTALINVESTMENT, "
                StrSql = StrSql + "((((VARIABLE.PALNTMARGIN - FIXED.BASEPLANTMARGIN)*(1-POWER(1+" + CostofCapital + ",-" + Year + "))/" + CostofCapital + ")-(VARIABLE.ASSETTOTAL- FIXED.BASEASSETTOTAL))/(VARIABLE.ASSETTOTAL- FIXED.BASEASSETTOTAL))*100 AS ROI "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "(SELECT DISTINCT "
                StrSql = StrSql + "RESULTSPL.CASEID AS BASECASE, "
                StrSql = StrSql + "PM AS BASEPLANTMARGIN, "
                StrSql = StrSql + "ASSETTOTAL AS BASEASSETTOTAL "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "RESULTSPL, "
                StrSql = StrSql + "TOTAL "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID=" + SelectedCaseid + "  "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "RESULTSPL.CASEID=TOTAL.CASEID) "
                StrSql = StrSql + "FIXED, "
                StrSql = StrSql + "(SELECT DISTINCT "
                StrSql = StrSql + "RESULTSPL.CASEID, "
                StrSql = StrSql + "PM AS PALNTMARGIN, "
                StrSql = StrSql + "ASSETTOTAL, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + Username + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS   CASEDES "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "RESULTSPL, "
                StrSql = StrSql + "TOTAL "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID IN(" + Cases + ") "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "RESULTSPL.CASEID<>" + SelectedCaseid + "  "
                StrSql = StrSql + "AND "
                StrSql = StrSql + "RESULTSPL.CASEID=TOTAL.CASEID) "
                StrSql = StrSql + "VARIABLE "
                StrSql = StrSql + "ORDER BY 1,2"

                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)

                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetROISql(ByVal Cases As String, ByVal UserName As String, ByVal Password As String) As DataTable
            Dim Dts As New DataTable()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""

                StrSql = "SELECT DISTINCT  "
                StrSql = StrSql + "RESULTSPL.CASEID , "
                StrSql = StrSql + "A.CASEDES, "
                StrSql = StrSql + "(RESULTSPL.CASEID||': '||A.CASEDES) AS DES, "
                StrSql = StrSql + "RESULTSPL.PM as PLANTMARGIN, "
                StrSql = StrSql + "TRIM(PREFERENCES.TITLE4) AS TITLE4 "
                StrSql = StrSql + "FROM "
                StrSql = StrSql + "RESULTSPL, "
                StrSql = StrSql + "(SELECT DISTINCT "
                StrSql = StrSql + "CASEID, "
                StrSql = StrSql + "( CASE WHEN RESULTSPL.CASEID <= 1000 THEN "
                StrSql = StrSql + "( SELECT (BASECASES.CASEDE1||' '||BASECASES.CASEDE2 ) "
                StrSql = StrSql + "FROM BASECASES "
                StrSql = StrSql + "WHERE  BASECASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + ") ELSE "
                StrSql = StrSql + "( SELECT DISTINCT ( NVL(PERMISSIONSCASES.CASEDE1,'') || ' ' || NVL(PERMISSIONSCASES.CASEDE2,'') ) "
                StrSql = StrSql + "FROM PERMISSIONSCASES "
                StrSql = StrSql + "WHERE  PERMISSIONSCASES.CASEID = RESULTSPL.CASEID "
                StrSql = StrSql + "AND PERMISSIONSCASES.USERNAME ='" + UserName + "' "

                StrSql = StrSql + ") "
                StrSql = StrSql + "END  ) AS CASEDES "
                StrSql = StrSql + "FROM RESULTSPL "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID IN (" + Cases + ") "
                StrSql = StrSql + ")	A, "
                StrSql = StrSql + "PREFERENCES "
                StrSql = StrSql + "WHERE "
                StrSql = StrSql + "RESULTSPL.CASEID IN (" + Cases + ") "
                StrSql = StrSql + "AND  PREFERENCES.CASEID =RESULTSPL.CASEID "
                StrSql = StrSql + "AND RESULTSPL.CASEID= A.CASEID "


                Dts = odbUtil.FillDataTable(StrSql, MyConnectionString)


                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetCountry() As DataSet
            Dim Dts As New DataSet()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = "SELECT CURID,CURDE1 FROM CURRENCY"
                Dts = odbUtil.FillDataSet(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPrefrences(ByVal UserName As String) As DataSet
            Dim Dts As New DataSet()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT  "
                StrSql = StrSql + "USERNAME, "
                StrSql = StrSql + "UNITS, "
                StrSql = StrSql + "CURRENCY, "
                StrSql = StrSql + "CURR, "
                StrSql = StrSql + "CONVERSIONFACTOR, "
                StrSql = StrSql + "TITLE1, "
                StrSql = StrSql + "TITLE2, "
                StrSql = StrSql + "TITLE3, "
                StrSql = StrSql + "TITLE4,"
                StrSql = StrSql + "TO_CHAR(CURREFFDATE,'MM/DD/YYYY') CEFFDATE "
                StrSql = StrSql + "FROM CHARTPREFERENCES "
                StrSql = StrSql + "WHERE USERNAME='" + UserName + "' "
                Dts = odbUtil.FillDataSet(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetCurrencyEffdate() As DataSet
            Dim Dts As New DataSet()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT TO_CHAR(EFFDATE,'MON DD,YYYY')  EDATETEXT,  "
                StrSql = StrSql + "TO_CHAR(EFFDATE,'MM/DD/YYYY') EDATEVAL "
                StrSql = StrSql + "FROM EFFDATE ORDER BY EFFDATE "
                Dts = odbUtil.FillDataSet(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

        Public Function GetPurchaseLb(ByVal CaseId As Integer) As DataSet
            Dim Dts As New DataSet()
            Try
                Dim odbUtil As New DBUtil()
                Dim MyConnectionString As String = ""
                MyConnectionString = System.Configuration.ConfigurationManager.AppSettings("EconConnectionString")
                Dim StrSql As String = ""
                StrSql = "SELECT PRICE, VMATERIAL, VLABOR, VENERGY, VPACK, VSHIP, VARIABLECOST, OFFICESUPPLIES, PLABOR, PENERGY, LEASECOST, INSURANCE, UTILITIES, COMMUN, TRAVEL, MAINT, MINOR, OUT, PROF, LAB, INKSUP, PLATESUP, METSUP, FIXEDCOST, TOTALCOST  "
                StrSql = StrSql + "FROM DIFFPRICERESULTS  WHERE SESSIONID=213211074 order by price"
                Dts = odbUtil.FillDataSet(StrSql, MyConnectionString)
                Return Dts
            Catch ex As Exception
                Throw
                Return Dts
            End Try
        End Function

     


















    End Class

End Namespace

